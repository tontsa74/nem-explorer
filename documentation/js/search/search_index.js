var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.229,1,1.748]],["body/interfaces/Account.html",[0,0.401,1,3.385,2,1.122,3,0.252,4,0.215,5,0.215,6,2.861,7,0.59,8,0.94,9,4.636,10,3.995,11,0.686,12,0.025,13,3.792,14,0.319,15,2.604,16,1.164,17,2.861,18,1.431,19,3.183,20,2.861,21,3.183,22,2.861,23,3.183,24,3.183,25,3.183,26,2.861,27,3.183,28,3.183,29,3.183,30,3.183,31,0.015,32,0.019,33,0.015]],["title/interfaces/AccountInfo.html",[0,0.229,10,2.063]],["body/interfaces/AccountInfo.html",[0,0.376,1,2.557,2,0.981,3,0.22,4,0.188,5,0.188,6,2.502,7,0.516,8,0.862,9,2.783,10,3.749,11,0.831,12,0.025,13,3.018,14,0.292,15,3.604,16,1.225,17,3.959,18,1.562,19,4.405,20,3.959,21,4.405,22,3.959,23,4.137,24,4.405,25,4.405,26,3.719,27,2.783,28,2.783,29,2.783,30,2.783,31,0.013,32,0.018,33,0.013]],["title/interfaces/AccountMetaData.html",[0,0.229,13,2.063]],["body/interfaces/AccountMetaData.html",[0,0.393,1,2.708,2,1.07,3,0.24,4,0.206,5,0.206,6,2.731,7,0.563,8,0.913,9,3.038,10,4.066,11,0.776,12,0.025,13,3.531,14,0.309,15,2.485,16,1.248,17,2.731,18,1.407,19,3.038,20,2.731,21,3.038,22,2.731,23,3.038,24,3.038,25,3.038,26,2.731,27,4.556,28,4.556,29,4.556,30,4.556,31,0.015,32,0.019,33,0.015]],["title/components/AccountsComponent.html",[34,0.728,35,1.23]],["body/components/AccountsComponent.html",[1,3.321,3,0.133,4,0.114,5,0.114,7,0.311,8,0.6,11,0.596,12,0.025,14,0.133,15,3.887,16,0.878,17,3.141,20,2.308,31,0.008,32,0.012,33,0.008,34,0.9,35,1.704,36,1.433,37,1.164,38,1.164,39,1.164,40,1.164,41,1.906,42,1.74,43,2.308,44,1.4,45,3.444,46,2.916,47,1.536,48,2.163,49,0.718,50,3.03,51,2.614,52,3.141,53,1.781,54,4.183,55,1.781,56,3.444,57,1.433,58,2.916,59,2.423,60,1.079,61,1.509,62,2.423,63,2.101,64,3.444,65,1.536,66,1.314,67,1.433,68,2.804,69,2.859,70,2.859,71,2.916,72,2.251,73,2.306,74,1.433,75,1.651,76,2.251,77,1.079,78,1.079,79,3.444,80,2.251,81,0.729,82,0.518,83,1.509,84,1.906,85,0.554,86,1.536,87,1.373,88,2.251,89,2.916,90,2.251,91,2.251,92,3.444,93,3.444,94,2.916,95,3.444,96,3.444,97,1.536,98,3.444,99,3.444,100,3.444,101,3.444,102,3.444,103,3.444,104,3.444,105,3.444,106,3.444,107,3.444,108,3.444,109,1.781,110,3.444,111,3.444,112,1.678,113,1.509,114,1.509,115,1.509,116,1.906,117,1.906,118,1.906,119,2.101,120,1.906,121,1.26,122,0.819,123,1.781,124,1.781,125,1.164,126,2.423,127,1.164,128,1.164,129,0.875,130,1.164,131,0.819,132,1.164,133,0.875,134,0.631,135,1.164,136,0.819,137,1.164,138,0.819,139,1.164,140,0.875,141,1.004,142,1.079,143,1.164,144,1.164]],["title/modules/AccountsModule.html",[145,1.152,146,2.063]],["body/modules/AccountsModule.html",[3,0.229,4,0.195,5,0.195,12,0.025,14,0.229,31,0.014,32,0.018,33,0.014,35,2.321,52,2.595,81,1.112,82,0.891,85,0.953,122,1.408,145,1.319,146,4.023,147,1.505,148,2.001,149,3.446,150,2.362,151,2.362,152,1.727,153,3.278,154,3.278,155,3.278,156,3.893,157,3.091,158,2.362,159,2.168,160,3.871,161,2.429,162,2.429,163,3.778,164,2.595,165,4.29,166,2.887,167,2.595,168,3.278,169,4.29,170,4.29,171,4.29,172,4.29,173,4.29,174,1.611]],["title/modules/AccountsRoutingModule.html",[145,1.152,156,2.063]],["body/modules/AccountsRoutingModule.html",[3,0.27,4,0.23,5,0.23,12,0.025,14,0.27,31,0.016,32,0.02,33,0.016,34,0.983,35,2.047,52,3.06,81,1.063,82,1.051,85,1.123,147,1.775,152,2.037,156,3.433,161,2.189,162,2.698,168,3.866,175,4.566,176,3.06,177,3.772,178,2.909,179,2.557,180,2.037,181,4.566,182,2.785,183,4.566]],["title/components/AppComponent.html",[34,0.728,129,1.314]],["body/components/AppComponent.html",[3,0.115,4,0.099,5,0.099,7,0.695,8,0.538,11,0.601,12,0.026,14,0.115,16,0.941,22,2.563,31,0.007,32,0.011,33,0.007,34,0.823,35,0.711,36,1.284,37,1.01,38,1.01,39,1.01,40,1.01,42,1.591,43,2.069,44,0.811,47,1.377,48,1.977,49,0.624,50,2.903,51,2.616,52,2.069,53,1.595,55,1.595,57,1.284,59,2.246,60,0.937,61,1.31,62,2.246,63,2.189,65,1.377,66,1.218,67,1.284,68,2.563,69,2.65,70,1.883,73,2.517,74,1.284,75,1.833,77,1.48,78,1.48,81,0.666,82,0.45,83,1.31,85,0.481,86,1.706,87,1.192,97,0.872,109,1.595,116,1.655,117,1.655,118,1.655,119,1.883,120,1.655,121,1.094,122,0.711,123,1.595,124,1.595,125,1.01,126,2.246,127,1.01,128,1.01,129,1.688,130,1.01,131,0.711,132,1.01,133,0.76,134,0.548,135,1.01,136,0.711,137,1.01,138,0.711,139,1.01,140,0.76,141,0.872,142,0.937,143,1.01,144,1.01,179,1.094,182,2.333,184,1.655,185,5.615,186,2.613,187,2.235,188,3.854,189,5.455,190,4.256,191,2.613,192,3.824,193,3.086,194,3.824,195,3.824,196,3.748,197,2.613,198,5.749,199,3.086,200,3.086,201,3.086,202,4.344,203,2.613,204,3.086,205,1.954,206,2.301,207,1.954,208,2.333,209,1.954,210,3.086,211,3.086,212,3.086,213,1.954,214,1.883,215,2.613,216,3.086,217,1.954,218,1.655,219,1.954,220,1.954,221,1.954,222,1.883,223,1.457,224,1.954,225,1.954,226,1.954,227,1.954,228,1.954,229,1.954,230,2.613,231,3.086,232,2.613,233,3.086,234,3.086,235,3.086,236,3.086]],["title/modules/AppModule.html",[145,1.152,237,2.266]],["body/modules/AppModule.html",[3,0.178,4,0.152,5,0.152,12,0.026,14,0.178,31,0.011,32,0.015,33,0.011,51,1.347,81,1.151,82,0.695,85,0.743,122,1.098,129,2.547,138,2.154,145,1.028,146,3.612,147,1.173,148,1.561,149,3.03,150,3.03,151,2.609,152,1.347,157,2.609,158,1.842,159,1.69,161,2.05,162,2.05,165,3.621,166,2.251,167,2.023,169,3.621,170,3.621,171,3.621,172,3.621,173,3.621,174,1.779,237,4.533,238,2.556,239,2.556,240,2.556,241,2.556,242,3.612,243,3.612,244,3.612,245,3.019,246,4.276,247,3.621,248,2.251,249,4.276,250,3.019,251,4.276,252,2.556,253,3.019,254,2.556,255,3.019,256,3.019,257,4.276,258,4.276,259,3.621,260,4.276,261,3.019]],["title/modules/AppRoutingModule.html",[145,1.152,242,2.063]],["body/modules/AppRoutingModule.html",[3,0.249,4,0.212,5,0.212,12,0.026,14,0.249,31,0.015,32,0.019,33,0.015,34,0.906,36,1.752,77,2.019,81,1.024,82,0.97,85,1.036,109,2.177,138,1.946,147,1.637,152,1.878,161,2.019,162,2.565,176,2.823,177,3.586,178,3.301,179,2.358,180,1.878,182,3.264,242,3.264,254,3.566,262,4.211,263,3.566,264,4.211,265,4.211,266,4.211,267,4.211,268,4.211,269,3.14]],["title/interfaces/Block.html",[0,0.229,134,0.948]],["body/interfaces/Block.html",[0,0.342,2,1.011,3,0.227,4,0.194,5,0.194,7,0.532,8,0.879,11,0.866,12,0.025,14,0.227,16,1.216,18,1.57,31,0.014,32,0.018,33,0.014,44,1.631,81,0.67,134,1.415,270,2.869,271,3.091,272,5.061,273,4.007,274,3.647,275,3.091,276,4.007,277,2.324,278,2.582]],["title/components/BlockTxesComponent.html",[34,0.728,133,1.314]],["body/components/BlockTxesComponent.html",[3,0.12,4,0.103,5,0.103,7,0.282,8,0.556,11,0.65,12,0.025,14,0.12,16,0.597,31,0.007,32,0.011,33,0.007,34,0.846,35,0.741,36,1.327,37,1.053,38,1.053,39,1.053,40,1.053,42,1.634,44,0.535,46,3.326,47,1.422,48,2.031,49,0.65,50,2.941,51,2.537,53,1.649,55,1.649,57,1.327,59,2.298,60,0.977,63,2.224,65,1.422,66,1.246,67,1.327,73,2.128,74,1.327,75,1.884,77,0.977,78,0.977,81,0.841,82,0.469,85,0.501,86,1.422,97,0.909,113,1.366,114,1.366,115,1.366,119,1.945,121,1.141,122,0.741,123,1.649,124,1.649,125,1.053,126,2.298,127,1.053,128,1.053,129,0.792,130,1.053,131,0.741,132,1.053,133,1.728,134,1.783,135,1.053,136,0.741,137,1.053,138,0.741,139,1.053,140,1.239,141,2.282,142,1.884,143,1.053,144,1.053,174,0.848,180,0.909,214,2.397,275,2.298,276,3.584,278,2.542,279,4.127,280,4.127,281,1.725,282,3.121,283,3.929,284,3.189,285,1.649,286,4.927,287,2.93,288,3.189,289,3.189,290,3.326,291,2.037,292,4.824,293,3.189,294,3.929,295,3.929,296,2.037,297,2.037,298,2.037,299,3.189,300,2.037,301,3.189,302,2.037,303,3.314,304,2.711,305,3.314,306,2.378,307,2.037,308,1.725,309,1.366,310,1.725,311,2.037,312,2.037,313,2.037,314,2.037,315,3.189,316,3.189,317,3.189,318,3.189,319,3.189,320,2.137,321,2.378,322,2.378,323,2.378,324,2.378,325,2.037,326,1.519,327,1.519,328,1.519,329,2.93]],["title/components/BlocksComponent.html",[34,0.728,131,1.23]],["body/components/BlocksComponent.html",[3,0.077,4,0.145,5,0.065,7,0.179,8,0.384,11,0.686,12,0.026,14,0.077,16,0.413,18,1.113,31,0.005,32,0.008,33,0.005,34,0.619,35,0.472,36,0.917,37,0.671,38,0.671,39,0.671,40,0.671,42,1.58,43,1.478,44,1.085,47,0.984,48,1.486,49,0.414,50,2.499,51,2.156,53,1.14,55,1.14,57,0.917,59,1.753,60,0.622,61,0.87,62,1.753,63,2.363,65,1.512,66,1.158,67,1.41,68,1.927,69,2.068,70,3.223,73,2.328,74,1.58,75,2.223,77,1.821,78,1.821,81,0.72,82,0.299,83,0.87,85,0.319,86,1.694,87,0.792,89,1.099,97,1.842,109,3.103,112,0.968,113,0.87,114,0.87,115,0.87,119,0.792,121,0.727,122,0.472,123,1.14,124,1.14,125,0.671,126,1.753,127,0.671,128,0.671,129,0.504,130,0.671,131,1.233,132,0.671,133,0.504,134,1.697,135,0.671,136,0.472,137,0.671,138,0.472,139,0.671,140,0.504,141,1.694,142,0.622,143,0.671,144,0.671,174,0.54,180,1.512,186,2.87,208,1.345,214,3.294,215,2.87,223,0.968,269,1.644,271,3.012,274,2.068,275,1.753,276,2.546,278,1.196,282,1.345,287,2.144,290,2.434,304,2.687,306,1.644,320,1.478,321,1.644,322,1.644,323,1.644,324,1.644,326,0.968,327,0.968,328,0.968,329,2.144,330,1.099,331,2.875,332,2.205,333,2.875,334,2.434,335,3.799,336,4.363,337,2.434,338,4.093,339,2.205,340,2.205,341,1.867,342,3.39,343,2.205,344,2.205,345,1.298,346,2.205,347,3.497,348,2.205,349,2.205,350,1.298,351,1.867,352,1.867,353,2.205,354,2.87,355,1.867,356,1.298,357,2.528,358,1.298,359,1.298,360,1.867,361,1.298,362,1.298,363,1.298,364,1.345,365,2.205,366,1.298,367,1.644,368,1.298,369,2.205,370,1.298,371,2.205,372,1.298,373,1.867,374,1.644,375,2.434,376,1.298,377,1.644,378,1.867,379,1.867,380,2.434,381,0.968,382,1.867,383,1.298,384,1.099,385,1.099,386,1.099,387,1.099,388,1.099,389,1.099,390,1.099,391,1.298,392,3.39,393,1.867,394,1.298,395,1.298,396,1.298,397,2.205,398,1.298,399,1.298,400,1.298,401,1.298,402,1.298,403,1.298,404,1.298,405,1.099,406,1.298,407,1.298,408,1.298,409,1.298,410,1.298,411,2.875,412,2.205,413,1.298,414,1.298,415,1.298,416,1.298,417,2.205,418,2.205,419,1.867,420,2.205,421,1.298,422,1.298,423,1.298]],["title/modules/BlocksModule.html",[145,1.152,243,2.063]],["body/modules/BlocksModule.html",[3,0.195,4,0.166,5,0.166,12,0.025,14,0.195,31,0.012,32,0.016,33,0.012,81,1.125,82,0.759,85,0.811,109,1.705,122,1.2,131,2.215,133,2.367,134,1.276,140,2.472,145,1.123,147,1.282,148,1.705,149,3.177,150,2.012,151,2.012,152,1.471,157,2.775,158,2.012,159,1.847,161,2.181,162,2.181,163,3.393,164,2.211,167,2.211,174,1.372,243,4.155,259,3.852,280,2.459,309,2.211,310,2.792,424,2.792,425,2.792,426,2.792,427,3.715,428,3.715,429,3.715,430,3.298,431,4.549,432,3.852,433,3.852,434,3.852,435,2.792,436,3.298,437,3.298,438,3.298,439,2.459,440,3.298]],["title/modules/BlocksRoutingModule.html",[145,1.152,429,2.063]],["body/modules/BlocksRoutingModule.html",[3,0.27,4,0.23,5,0.23,12,0.025,14,0.27,31,0.016,32,0.02,33,0.016,34,0.983,81,1.063,82,1.051,85,1.123,109,2.36,131,2.047,147,1.775,152,2.037,161,2.189,162,2.698,176,3.06,177,3.772,178,2.909,179,2.557,180,2.037,182,2.785,429,3.433,435,3.866,441,4.566,442,4.566,443,4.566]],["title/interfaces/Data.html",[0,0.229,44,0.888]],["body/interfaces/Data.html",[0,0.38,2,1.191,3,0.268,4,0.229,5,0.229,7,0.626,8,0.976,11,0.712,12,0.025,14,0.268,16,1.222,18,1.462,31,0.016,32,0.02,33,0.016,44,1.77,81,0.79,134,1.271,270,3.38,271,2.343,272,3.838,273,3.038,274,2.765,275,2.343,276,3.038,277,1.762,278,2.529]],["title/interfaces/ExplorerBlockViewModel.html",[0,0.229,444,2.266]],["body/interfaces/ExplorerBlockViewModel.html",[0,0.382,2,1.2,3,0.27,4,0.23,5,0.23,7,0.631,8,0.981,11,0.58,12,0.025,14,0.332,16,0.855,18,1.051,31,0.016,32,0.02,33,0.016,44,1.673,81,0.981,134,1.785,141,2.037,444,3.772,445,3.405,446,4.268,447,3.721,448,3.405,449,3.866]],["title/interfaces/ExplorerBlockViewModelData.html",[0,0.229,446,2.266]],["body/interfaces/ExplorerBlockViewModelData.html",[0,0.365,2,1.114,3,0.25,4,0.214,5,0.214,7,0.586,8,0.936,11,0.788,12,0.025,14,0.317,16,1.105,18,1.358,31,0.015,32,0.019,33,0.015,44,1.114,81,0.936,134,1.901,141,2.766,444,2.842,445,3.162,446,3.953,447,3.903,448,4.624,449,5.25]],["title/interfaces/ExplorerTransferViewModel.html",[0,0.229,447,2.063]],["body/interfaces/ExplorerTransferViewModel.html",[0,0.31,2,1.2,3,0.27,4,0.23,5,0.23,7,0.631,8,0.981,11,0.775,12,0.025,14,0.27,16,1.247,31,0.016,32,0.02,33,0.016,81,0.796,278,2.72,447,3.433,448,4.748,450,3.866,451,6.367,452,6.367]],["title/interfaces/Height.html",[0,0.229,271,1.748]],["body/interfaces/Height.html",[0,0.338,2,1.31,3,0.294,4,0.252,5,0.252,7,0.689,8,1.034,11,0.634,12,0.024,14,0.294,18,1.459,31,0.018,32,0.021,33,0.018,271,3.515,453,4.221]],["title/interfaces/Message.html",[0,0.229,454,1.748]],["body/interfaces/Message.html",[0,0.369,2,1.137,3,0.255,4,0.218,5,0.218,7,0.598,8,0.948,11,0.848,12,0.024,14,0.321,16,1.249,18,1.578,31,0.016,32,0.02,33,0.016,273,2.901,274,2.64,275,2.238,277,1.682,278,1.801,303,3.228,304,2.64,305,3.228,454,3.23,455,3.228,456,5.29,457,3.665,458,3.665,459,3.665]],["title/pipes/MessagePipe.html",[427,2.063,460,2.063]],["body/pipes/MessagePipe.html",[3,0.225,4,0.192,5,0.192,11,0.484,12,0.026,14,0.225,16,1.116,31,0.02,32,0.018,33,0.014,42,2.087,47,1.7,49,1.217,57,1.586,63,1.586,65,1.7,66,1.572,67,1.586,73,2.478,74,1.586,81,0.874,82,0.878,85,0.938,86,1.7,94,4.247,97,1.7,208,2.326,388,3.228,427,3.06,454,3.519,460,3.06,461,2.843,462,3.228,463,5.24,464,5.016,465,3.812,466,5.016,467,5.016,468,4.247,469,3.812,470,3.812,471,3.812,472,3.812,473,3.228]],["title/pipes/MsNemesisPipe.html",[428,2.063,460,2.063]],["body/pipes/MsNemesisPipe.html",[3,0.225,4,0.192,5,0.192,11,0.484,12,0.026,14,0.225,18,1.425,31,0.014,32,0.018,33,0.014,42,2.087,47,1.7,49,1.217,57,1.586,63,1.586,65,1.7,66,1.572,67,1.586,73,2.478,74,1.586,78,2.967,81,0.664,82,0.878,85,0.938,86,1.7,97,1.7,134,1.069,180,1.7,275,3.079,320,3.362,357,2.843,428,3.06,460,3.06,461,2.843,463,4.747,468,4.247,473,4.247,474,4.247,475,3.228,476,5.606,477,5.606,478,5.016,479,3.812,480,5.606,481,3.812,482,3.812]],["title/injectables/NemNisService.html",[62,1.748,483,2.266]],["body/injectables/NemNisService.html",[1,2.451,3,0.09,4,0.077,5,0.077,7,0.21,8,0.438,11,0.63,12,0.026,14,0.09,15,2.286,16,0.888,18,0.863,31,0.022,32,0.009,33,0.005,36,1.047,42,2.063,43,1.687,57,1.047,58,2.131,60,0.728,62,1.301,63,2.206,65,2.114,66,1.329,67,1.972,69,1.535,70,3.235,71,2.131,73,2.312,74,1.862,75,2.899,77,1.991,78,1.545,81,0.864,82,0.35,84,1.286,85,0.374,86,2.426,87,0.927,97,1.122,109,1.937,134,1.164,142,1.206,174,0.632,180,1.997,187,2.061,188,4.011,190,2.131,191,1.286,196,2.402,197,2.131,208,0.927,218,3.172,222,1.535,252,1.286,271,2.928,282,1.535,304,2.892,341,2.131,355,2.131,357,1.876,364,1.535,385,1.286,386,1.286,454,2.314,483,1.687,484,1.519,485,4.605,486,1.286,487,2.516,488,3.222,489,2.516,490,2.131,491,2.516,492,1.519,493,4.476,494,3.747,495,3.747,496,2.516,497,3.222,498,2.516,499,2.516,500,2.516,501,3.747,502,2.516,503,1.519,504,2.516,505,2.516,506,5.558,507,1.519,508,3.747,509,1.519,510,3.747,511,2.516,512,1.519,513,2.516,514,1.545,515,1.519,516,2.516,517,1.519,518,2.516,519,2.516,520,1.519,521,2.516,522,2.516,523,1.519,524,1.286,525,1.519,526,2.516,527,1.286,528,1.519,529,1.519,530,3.747,531,1.519,532,1.519,533,3.222,534,3.747,535,3.747,536,3.747,537,3.747,538,1.519,539,1.519,540,3.222,541,1.519,542,1.519,543,1.519,544,1.519,545,1.519,546,1.519,547,1.519,548,1.519,549,1.519,550,1.519,551,1.519,552,1.519,553,1.519,554,1.519,555,1.519,556,1.519]],["title/interfaces/Node.html",[0,0.229,187,1.314]],["body/interfaces/Node.html",[0,0.425,2,1.036,3,0.233,4,0.199,5,0.199,7,0.545,8,0.894,11,0.724,12,0.025,14,0.303,16,1.223,18,1.312,31,0.014,32,0.018,33,0.014,44,1.036,49,1.926,66,1.106,187,2.538,277,1.533,285,2.039,514,1.891,557,2.209,558,3.682,559,3.682,560,3.12,561,3.12,562,3.12,563,2.407,564,2.407,565,2.407,566,2.407,567,2.407,568,2.407,569,2.407,570,2.407,571,2.407,572,2.407,573,2.209,574,2.407]],["title/interfaces/NodeCollection.html",[0,0.229,514,1.621]],["body/interfaces/NodeCollection.html",[0,0.415,2,0.963,3,0.216,4,0.185,5,0.185,7,0.507,8,0.852,11,0.776,12,0.025,14,0.289,16,1.202,18,1.266,31,0.013,32,0.018,33,0.013,44,1.541,49,1.17,66,1.028,67,2.773,187,2.682,277,1.425,285,1.896,514,2.344,557,2.053,558,2.237,559,2.237,560,2.527,561,2.527,562,2.527,563,3.578,564,3.578,565,3.578,566,3.578,567,2.237,568,2.237,569,2.237,570,2.237,571,2.237,572,2.237,573,2.053,574,2.237]],["title/interfaces/NodeEndPoint.html",[0,0.229,560,1.748]],["body/interfaces/NodeEndPoint.html",[0,0.425,2,1.036,3,0.233,4,0.199,5,0.199,7,0.545,8,0.894,11,0.724,12,0.025,14,0.303,16,1.274,18,1.441,31,0.014,32,0.018,33,0.014,44,1.036,49,1.259,66,1.106,187,2.493,277,1.533,285,2.039,514,1.891,557,2.209,558,2.407,559,2.407,560,2.947,561,2.652,562,2.652,563,2.407,564,2.407,565,2.407,566,2.407,567,2.407,568,2.407,569,2.407,570,2.407,571,3.682,572,3.682,573,3.38,574,2.407]],["title/interfaces/NodeIdentity.html",[0,0.229,561,1.748]],["body/interfaces/NodeIdentity.html",[0,0.426,2,1.05,3,0.236,4,0.202,5,0.202,7,0.552,8,0.901,11,0.657,12,0.025,14,0.305,16,1.276,18,1.32,31,0.014,32,0.019,33,0.014,44,1.05,49,1.275,66,1.701,187,2.502,277,1.553,285,3.136,514,1.916,557,2.237,558,2.437,559,2.437,560,2.674,561,2.965,562,2.674,563,2.437,564,2.437,565,2.437,566,2.437,567,2.437,568,2.437,569,2.437,570,2.437,571,2.437,572,2.437,573,2.237,574,3.7]],["title/interfaces/NodeMetaData.html",[0,0.229,562,1.748]],["body/interfaces/NodeMetaData.html",[0,0.419,2,0.992,3,0.223,4,0.191,5,0.191,7,0.522,8,0.869,11,0.784,12,0.025,14,0.294,16,1.28,18,1.488,31,0.014,32,0.018,33,0.014,44,0.992,49,1.206,66,1.059,187,2.463,277,2.307,285,1.953,514,1.811,557,2.115,558,2.305,559,2.305,560,2.578,561,2.578,562,2.885,563,2.305,564,2.305,565,2.305,566,2.305,567,3.621,568,3.621,569,3.621,570,3.621,571,2.305,572,2.305,573,2.115,574,2.305]],["title/components/NodesComponent.html",[34,0.728,136,1.23]],["body/components/NodesComponent.html",[3,0.103,4,0.179,5,0.088,7,0.242,8,0.492,11,0.688,12,0.026,14,0.103,16,0.764,18,0.65,31,0.006,32,0.01,33,0.006,34,0.765,35,0.636,36,1.175,37,0.904,38,0.904,39,0.904,40,0.904,42,1.478,44,1.071,47,1.26,48,1.836,49,0.558,50,2.798,51,2.414,53,1.46,55,1.46,57,1.175,59,2.108,60,0.838,61,1.172,62,2.108,63,2.409,65,1.26,66,1.469,67,1.175,68,2.381,69,2.488,70,2.919,73,2.251,74,1.478,75,1.955,77,1.955,78,1.955,81,0.711,82,0.403,83,1.172,85,0.43,86,1.26,87,1.067,97,0.78,112,1.304,113,1.172,114,1.172,115,1.172,119,1.067,121,1.989,122,0.636,123,1.46,124,1.46,125,0.904,126,2.108,127,0.904,128,0.904,129,0.68,130,0.904,131,0.636,132,0.904,133,0.68,134,0.49,135,0.904,136,1.483,137,0.904,138,0.636,139,0.904,140,0.68,141,0.78,142,0.838,143,0.904,144,0.904,174,0.728,180,0.78,187,2.44,188,2.381,196,2.649,206,2.106,214,3.688,222,3.688,277,1.585,282,2.488,287,2.649,306,2.106,326,1.304,327,1.304,328,1.304,329,2.649,334,3.007,336,4.052,337,3.007,338,4.263,347,3.452,354,2.391,360,2.391,364,1.723,367,2.106,373,2.391,374,2.106,375,2.391,377,2.106,378,2.391,379,2.391,380,3.007,381,1.304,382,2.391,384,1.481,387,1.481,389,1.481,390,1.481,405,1.481,490,3.452,524,1.481,573,2.283,575,1.481,576,3.552,577,2.824,578,3.552,579,2.824,580,2.824,581,1.749,582,1.749,583,2.824,584,1.749,585,2.824,586,1.749,587,1.749,588,1.749,589,1.749,590,1.749,591,2.824,592,2.391,593,1.749,594,1.749,595,2.824,596,1.749,597,2.824,598,1.749,599,1.749,600,1.749,601,1.749,602,1.749,603,2.824,604,2.824,605,2.824]],["title/modules/NodesModule.html",[145,1.152,244,2.063]],["body/modules/NodesModule.html",[3,0.237,4,0.203,5,0.203,12,0.025,14,0.237,31,0.014,32,0.019,33,0.014,81,1.097,82,0.926,85,0.989,122,1.462,136,2.345,145,1.37,147,1.563,148,2.079,149,3.51,150,2.453,151,2.453,152,1.794,157,3.168,158,2.453,159,2.252,161,2.49,162,2.49,163,3.873,164,2.695,167,2.695,174,1.673,222,2.453,244,4.055,432,4.397,433,4.397,434,4.397,606,3.405,607,3.405,608,3.405,609,3.933,610,4.021,611,3.405]],["title/modules/NodesRoutingModule.html",[145,1.152,609,2.063]],["body/modules/NodesRoutingModule.html",[3,0.27,4,0.23,5,0.23,12,0.025,14,0.27,31,0.016,32,0.02,33,0.016,34,0.983,81,1.063,82,1.051,85,1.123,136,2.047,147,1.775,152,2.037,161,2.189,162,2.698,176,3.06,177,3.772,178,3.153,179,2.557,180,2.037,182,2.785,222,2.785,609,3.433,611,3.866,612,4.566,613,4.566]],["title/components/NotfoundComponent.html",[34,0.728,138,1.23]],["body/components/NotfoundComponent.html",[3,0.205,4,0.175,5,0.175,7,0.48,12,0.025,14,0.205,31,0.012,32,0.017,33,0.012,34,1.151,35,1.263,36,1.961,37,1.795,38,1.795,39,1.795,40,1.795,42,1.445,47,2.102,48,2.766,49,1.108,50,3.374,51,2.911,53,2.436,55,2.436,57,1.961,59,2.966,60,2.565,63,1.961,66,1.321,74,1.445,75,1.665,81,0.605,82,0.8,85,0.854,122,1.263,123,2.436,124,2.436,125,1.795,126,2.966,127,1.795,128,1.795,129,1.35,130,1.795,131,1.263,132,1.795,133,1.35,134,0.974,135,1.795,136,1.263,137,1.795,138,2.087,139,1.795,140,1.35,141,1.549,142,1.665,143,1.795,144,1.795,263,4.858,367,3.514,377,4.278,614,2.94,615,4.713,616,5.35,617,4.713,618,3.472,619,3.472]],["title/interfaces/Transaction.html",[0,0.229,278,1.407]],["body/interfaces/Transaction.html",[0,0.32,2,0.915,3,0.206,4,0.176,5,0.176,7,0.481,8,0.823,11,0.875,12,0.025,14,0.279,16,1.266,18,1.607,31,0.013,32,0.017,33,0.013,273,3.85,274,3.504,275,2.97,277,2.233,278,1.964,303,4.283,304,3.504,305,4.283,454,3.33,455,2.597,456,2.948,457,4.863,458,4.863,459,4.863]],["title/components/TxesDetailsComponent.html",[34,0.728,140,1.314]],["body/components/TxesDetailsComponent.html",[3,0.161,4,0.138,5,0.138,7,0.378,8,0.694,11,0.506,12,0.025,14,0.161,31,0.01,32,0.014,33,0.01,34,1.011,35,0.994,36,1.657,37,1.414,38,1.414,39,1.414,40,1.414,42,1.657,44,1.441,47,1.777,48,2.429,49,0.873,50,3.194,51,2.755,53,2.059,55,2.059,57,1.657,59,2.668,60,1.311,63,1.955,65,1.22,66,1.317,67,1.137,73,1.955,74,1.137,75,1.311,81,0.819,82,0.63,85,0.673,86,1.22,122,0.994,123,2.059,124,2.059,125,1.414,126,2.668,127,1.414,128,1.414,129,1.063,130,1.414,131,0.994,132,1.414,133,1.063,134,0.767,135,1.414,136,0.994,137,1.414,138,0.994,139,1.414,140,2.006,141,2.799,142,2.745,143,1.414,144,1.414,174,1.137,278,2.611,279,3.849,282,2.43,285,2.429,286,3.372,308,2.315,309,3.46,320,2.67,321,2.97,322,2.97,323,2.97,324,2.97,381,2.039,419,2.315,439,3.849,454,2.059,620,2.315,621,4.698,622,3.983,623,2.734,624,2.734,625,2.734,626,2.734,627,2.734,628,2.734,629,2.734,630,2.734,631,5.161,632,5.161,633,2.734]],["title/coverage.html",[634,3.918]],["body/coverage.html",[0,0.457,1,1.568,5,0.153,6,3.338,10,1.851,11,0.386,12,0.025,13,1.851,31,0.011,32,0.015,33,0.011,34,1.312,35,1.103,41,2.568,44,0.797,62,1.568,97,3.031,121,2.403,129,1.179,131,1.103,133,1.179,134,0.851,136,1.103,138,1.103,140,1.179,184,2.568,187,1.179,214,1.851,270,3.2,271,1.568,278,1.262,279,3.2,280,2.262,281,2.568,309,2.033,330,2.568,364,1.851,427,1.851,428,1.851,439,2.262,444,2.033,445,3.2,446,2.033,447,1.851,450,2.568,453,2.568,454,1.568,455,3.2,460,2.618,462,2.568,474,2.568,475,2.568,483,2.033,485,2.568,486,2.568,514,1.454,557,3.199,560,1.568,561,1.568,562,1.568,575,2.568,592,2.568,614,2.568,620,2.568,634,2.568,635,3.033,636,3.033,637,3.033,638,3.033,639,3.033,640,3.033,641,3.033,642,3.033,643,3.033,644,3.033,645,3.033,646,3.033,647,4.979,648,4.291,649,4.291,650,4.979,651,4.979,652,4.291,653,3.033,654,3.033,655,3.033,656,3.033,657,3.033,658,3.033,659,3.033,660,4.291,661,2.568,662,4.291,663,3.633,664,4.291,665,2.568,666,3.033]],["title/dependencies.html",[148,2.104,667,2.385]],["body/dependencies.html",[12,0.025,31,0.016,32,0.02,33,0.016,82,1.036,148,2.326,164,3.016,166,3.356,174,1.872,179,2.52,247,4.722,248,4.159,527,3.81,668,4.5,669,6.796,670,4.5,671,5.577,672,4.5,673,4.5,674,4.5,675,4.5,676,4.5,677,4.5,678,4.5,679,4.5,680,4.5,681,4.5,682,4.5,683,4.5]],["title/index.html",[7,0.389,684,2.817,685,2.817]],["body/index.html",[4,0.182,12,0.017,31,0.013,32,0.017,33,0.013,34,1.173,51,1.607,66,1.01,73,2.01,159,2.017,187,2.119,188,2.415,203,4.615,206,2.687,230,4.931,232,3.051,277,1.401,351,3.051,364,2.198,667,3.051,686,3.603,687,4.831,688,3.603,689,5.451,690,3.603,691,3.603,692,3.603,693,3.603,694,3.603,695,3.603,696,5.451,697,3.603,698,3.603,699,4.831,700,3.603,701,3.603,702,3.603,703,3.603,704,3.603,705,3.603,706,3.603,707,3.603,708,3.603,709,6.074,710,6.387,711,3.603,712,3.603,713,3.603,714,3.603,715,3.603,716,3.603,717,3.603,718,3.603,719,3.603,720,5.451,721,3.603,722,6.074,723,3.603,724,3.603,725,3.603,726,3.603,727,3.603,728,3.603,729,3.051,730,4.831,731,4.831,732,5.824,733,3.603,734,4.831,735,4.831,736,3.603,737,5.824,738,3.603,739,3.603,740,3.603,741,5.451,742,3.603,743,3.603,744,3.603]],["title/modules.html",[147,1.799]],["body/modules.html",[12,0.021,31,0.017,32,0.021,33,0.017,146,2.88,147,1.835,156,2.88,237,3.165,242,2.88,243,2.88,244,2.88,248,4.803,352,5.806,429,2.88,609,2.88,745,6.441,746,6.441,747,6.441,748,6.441]],["title/overview.html",[749,3.918]],["body/overview.html",[2,0.89,12,0.025,31,0.012,32,0.017,33,0.012,35,1.921,36,1.409,122,1.232,129,2.443,131,1.921,133,2.053,136,1.921,138,1.921,140,2.053,145,1.154,146,3.835,147,1.317,148,1.751,149,2.067,150,2.067,151,2.067,152,1.511,153,2.868,154,2.868,155,2.868,156,3.222,157,2.827,158,2.067,159,1.897,178,1.751,208,2.067,223,2.526,237,4.56,238,2.868,239,2.868,240,2.868,241,2.868,242,3.222,243,4.15,244,3.835,374,2.526,424,2.868,425,2.868,426,2.868,427,3.222,428,3.222,429,3.222,461,2.526,483,2.271,606,2.868,607,2.868,608,2.868,609,3.222,749,2.868,750,3.388,751,3.388,752,3.388]],["title/routes.html",[178,2.393]],["body/routes.html",[12,0.023,31,0.02,32,0.023,33,0.02,178,2.826]],["title/miscellaneous/variables.html",[753,2.385,754,3.446]],["body/miscellaneous/variables.html",[7,0.668,11,0.74,12,0.025,26,3.904,31,0.017,32,0.021,33,0.017,77,2.792,78,2.792,269,3.603,393,4.09,661,4.09,663,5.496,665,4.09,729,4.931,753,4.09,754,4.09,755,4.831,756,4.831]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":97,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"coverage.html":{}}}],["0.6.97.tgz",{"_index":701,"title":{},"body":{"index.html":{}}}],["0.8.26",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"injectables/NemNisService.html":{},"overview.html":{}}}],["1.9.0",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":375,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["100",{"_index":121,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"coverage.html":{}}}],["1000",{"_index":482,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["12/13",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["1427587585000",{"_index":481,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["16",{"_index":752,"title":{},"body":{"overview.html":{}}}],["16/17",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["1].height",{"_index":415,"title":{},"body":{"components/BlocksComponent.html":{}}}],["2",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/BlocksComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":591,"title":{},"body":{"components/NodesComponent.html":{}}}],["33",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":374,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"overview.html":{}}}],["50",{"_index":592,"title":{},"body":{"components/NodesComponent.html":{},"coverage.html":{}}}],["5000",{"_index":556,"title":{},"body":{"injectables/NemNisService.html":{}}}],["500px",{"_index":120,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{}}}],["6.5.2",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":751,"title":{},"body":{"overview.html":{}}}],["7.2.15",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["7.3.5",{"_index":690,"title":{},"body":{"index.html":{}}}],["7.3.7",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":750,"title":{},"body":{"overview.html":{}}}],["81",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":329,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["9",{"_index":98,"title":{},"body":{"components/AccountsComponent.html":{}}}],["9/11",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":314,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["92",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"injectables/NemNisService.html":{},"coverage.html":{}}}],["account.account.address",{"_index":104,"title":{},"body":{"components/AccountsComponent.html":{}}}],["account.account.balance",{"_index":105,"title":{},"body":{"components/AccountsComponent.html":{}}}],["account.account.harvestedblocks",{"_index":110,"title":{},"body":{"components/AccountsComponent.html":{}}}],["account.account.importance",{"_index":111,"title":{},"body":{"components/AccountsComponent.html":{}}}],["account.account.vestedbalance",{"_index":107,"title":{},"body":{"components/AccountsComponent.html":{}}}],["account/get?address",{"_index":547,"title":{},"body":{"injectables/NemNisService.html":{}}}],["accountinfo",{"_index":10,"title":{"interfaces/AccountInfo.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"coverage.html":{}}}],["accountmetadata",{"_index":13,"title":{"interfaces/AccountMetaData.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"coverage.html":{}}}],["accounts",{"_index":52,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{}}}],["accounts'},{'name",{"_index":128,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["accounts.component",{"_index":168,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{}}}],["accounts.component.css",{"_index":54,"title":{},"body":{"components/AccountsComponent.html":{}}}],["accounts.component.html",{"_index":56,"title":{},"body":{"components/AccountsComponent.html":{}}}],["accounts/accounts.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["accountscomponent",{"_index":35,"title":{"components/AccountsComponent.html":{}},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountsmodule",{"_index":146,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsroutes",{"_index":181,"title":{},"body":{"modules/AccountsRoutingModule.html":{}}}],["accountsroutingmodule",{"_index":156,"title":{"modules/AccountsRoutingModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["activated",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":566,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["activelinkindex",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":144,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["address",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"injectables/NemNisService.html":{}}}],["address).subscribe((resp",{"_index":549,"title":{},"body":{"injectables/NemNisService.html":{}}}],["align",{"_index":114,"title":{},"body":{"components/AccountsComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["amount",{"_index":304,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Message.html":{},"injectables/NemNisService.html":{},"interfaces/Transaction.html":{}}}],["angular",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":164,"title":{},"body":{"modules/AccountsModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"injectables/NemNisService.html":{}}}],["angular/compiler",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":82,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":166,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":174,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"components/TxesDetailsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":179,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesRoutingModule.html":{},"dependencies.html":{}}}],["api's",{"_index":487,"title":{},"body":{"injectables/NemNisService.html":{}}}],["app",{"_index":51,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"index.html":{}}}],["app.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":129,"title":{"components/AppComponent.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":568,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["appmodule",{"_index":237,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":242,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":723,"title":{},"body":{"index.html":{}}}],["ascii",{"_index":467,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["automatically",{"_index":715,"title":{},"body":{"index.html":{}}}],["available",{"_index":748,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":695,"title":{},"body":{"index.html":{}}}],["balance",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{}}}],["bar",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{}}}],["behaviorsubject",{"_index":525,"title":{},"body":{"injectables/NemNisService.html":{}}}],["behaviorsubject(this.url",{"_index":519,"title":{},"body":{"injectables/NemNisService.html":{}}}],["block",{"_index":134,"title":{"interfaces/Block.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["block.transactions",{"_index":409,"title":{},"body":{"components/BlocksComponent.html":{}}}],["block/at/public",{"_index":538,"title":{},"body":{"injectables/NemNisService.html":{}}}],["blockchain",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BlocksComponent.html":{}}}],["blockclicked",{"_index":339,"title":{},"body":{"components/BlocksComponent.html":{}}}],["blockclicked(block",{"_index":344,"title":{},"body":{"components/BlocksComponent.html":{}}}],["blocks",{"_index":109,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"injectables/NemNisService.html":{}}}],["blocks'},{'name",{"_index":132,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["blocks.component",{"_index":435,"title":{},"body":{"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{}}}],["blocks.component.css",{"_index":331,"title":{},"body":{"components/BlocksComponent.html":{}}}],["blocks.component.html",{"_index":332,"title":{},"body":{"components/BlocksComponent.html":{}}}],["blocks/blocks.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["blockscomponent",{"_index":131,"title":{"components/BlocksComponent.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blockselected",{"_index":290,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{}}}],["blockselected.height",{"_index":315,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["blocksmodule",{"_index":243,"title":{"modules/BlocksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules.html":{},"overview.html":{}}}],["blocksroutes",{"_index":442,"title":{},"body":{"modules/BlocksRoutingModule.html":{}}}],["blocksroutingmodule",{"_index":429,"title":{"modules/BlocksRoutingModule.html":{}},"body":{"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blocktxescomponent",{"_index":133,"title":{"components/BlockTxesComponent.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":369,"title":{},"body":{"components/BlocksComponent.html":{}}}],["bootstrap",{"_index":150,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"overview.html":{}}}],["break",{"_index":472,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["browse",{"_index":352,"title":{},"body":{"components/BlocksComponent.html":{},"modules.html":{}}}],["browser",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":722,"title":{},"body":{"index.html":{}}}],["busy",{"_index":565,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["callbackfunction",{"_index":506,"title":{},"body":{"injectables/NemNisService.html":{}}}],["callbackfunction(onerror",{"_index":537,"title":{},"body":{"injectables/NemNisService.html":{}}}],["callbackfunction(resp",{"_index":533,"title":{},"body":{"injectables/NemNisService.html":{}}}],["callbackfunction(resp.reverse",{"_index":546,"title":{},"body":{"injectables/NemNisService.html":{}}}],["capital",{"_index":99,"title":{},"body":{"components/AccountsComponent.html":{}}}],["case",{"_index":471,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["cd",{"_index":703,"title":{},"body":{"index.html":{}}}],["cell",{"_index":327,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["center",{"_index":115,"title":{},"body":{"components/AccountsComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["chain",{"_index":510,"title":{},"body":{"injectables/NemNisService.html":{}}}],["chain/height",{"_index":531,"title":{},"body":{"injectables/NemNisService.html":{}}}],["chainheight",{"_index":333,"title":{},"body":{"components/BlocksComponent.html":{}}}],["change",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/NodesComponent.html":{},"index.html":{}}}],["changenode",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{}}}],["changenode(nodeurl",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["changenode(url",{"_index":502,"title":{},"body":{"injectables/NemNisService.html":{}}}],["changes",{"_index":504,"title":{},"body":{"injectables/NemNisService.html":{}}}],["check",{"_index":743,"title":{},"body":{"index.html":{}}}],["class",{"_index":85,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["clear",{"_index":102,"title":{},"body":{"components/AccountsComponent.html":{}}}],["cli",{"_index":689,"title":{},"body":{"index.html":{}}}],["cluster_accountsmodule",{"_index":153,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_declarations",{"_index":154,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_imports",{"_index":155,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksmodule",{"_index":424,"title":{},"body":{"modules/BlocksModule.html":{},"overview.html":{}}}],["cluster_blocksmodule_declarations",{"_index":425,"title":{},"body":{"modules/BlocksModule.html":{},"overview.html":{}}}],["cluster_blocksmodule_imports",{"_index":426,"title":{},"body":{"modules/BlocksModule.html":{},"overview.html":{}}}],["cluster_nodesmodule",{"_index":606,"title":{},"body":{"modules/NodesModule.html":{},"overview.html":{}}}],["cluster_nodesmodule_declarations",{"_index":607,"title":{},"body":{"modules/NodesModule.html":{},"overview.html":{}}}],["cluster_nodesmodule_imports",{"_index":608,"title":{},"body":{"modules/NodesModule.html":{},"overview.html":{}}}],["code",{"_index":718,"title":{},"body":{"index.html":{}}}],["columns",{"_index":306,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["commonmodule",{"_index":163,"title":{},"body":{"modules/AccountsModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{}}}],["component",{"_index":34,"title":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}},"body":{"components/AccountsComponent.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksRoutingModule.html":{},"components/NodesComponent.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":127,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["components",{"_index":36,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"overview.html":{}}}],["console.log(onerror",{"_index":535,"title":{},"body":{"injectables/NemNisService.html":{}}}],["const",{"_index":180,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksRoutingModule.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"modules/NodesRoutingModule.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":630,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["constructor(data",{"_index":623,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["constructor(dialog",{"_index":291,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["constructor(http",{"_index":492,"title":{},"body":{"injectables/NemNisService.html":{}}}],["constructor(nemnis",{"_index":61,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{}}}],["constructor(public",{"_index":311,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["containing",{"_index":95,"title":{},"body":{"components/AccountsComponent.html":{}}}],["core",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["cosignatories",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["cosignatoryof",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["coverage",{"_index":634,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BlocksComponent.html":{}}}],["currently",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["currentnode",{"_index":488,"title":{},"body":{"injectables/NemNisService.html":{}}}],["data",{"_index":44,"title":{"interfaces/Data.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["data.endpoint.host}}:{{data.endpoint.port",{"_index":603,"title":{},"body":{"components/NodesComponent.html":{}}}],["data.height",{"_index":417,"title":{},"body":{"components/BlocksComponent.html":{}}}],["data.identity.name",{"_index":604,"title":{},"body":{"components/NodesComponent.html":{}}}],["data.metadata.version",{"_index":605,"title":{},"body":{"components/NodesComponent.html":{}}}],["data.signer",{"_index":418,"title":{},"body":{"components/BlocksComponent.html":{}}}],["data.timestamp",{"_index":419,"title":{},"body":{"components/BlocksComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["data.transactions.length",{"_index":420,"title":{},"body":{"components/BlocksComponent.html":{}}}],["datasource",{"_index":334,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["date:\"yyyy",{"_index":321,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["dd",{"_index":323,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["deadline",{"_index":457,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["declarations",{"_index":149,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"overview.html":{}}}],["decorators",{"_index":381,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["default",{"_index":77,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":63,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["defines",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":148,"title":{"dependencies.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":42,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["design",{"_index":295,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["details",{"_index":142,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["details.component",{"_index":310,"title":{},"body":{"components/BlockTxesComponent.html":{},"modules/BlocksModule.html":{}}}],["details.component.css",{"_index":621,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["details.component.html",{"_index":622,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["details.component.ts",{"_index":620,"title":{},"body":{"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":624,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":627,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":625,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["details/txes",{"_index":309,"title":{},"body":{"components/BlockTxesComponent.html":{},"modules/BlocksModule.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["details{{data.timestamp",{"_index":633,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["dev",{"_index":712,"title":{},"body":{"index.html":{}}}],["development",{"_index":708,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":286,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["dialogref",{"_index":312,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["difficulty",{"_index":449,"title":{},"body":{"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{}}}],["directive",{"_index":125,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["directives",{"_index":143,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":721,"title":{},"body":{"index.html":{}}}],["directory",{"_index":726,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":554,"title":{},"body":{"injectables/NemNisService.html":{}}}],["display",{"_index":282,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["displayed",{"_index":367,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{}}}],["displayedcolumns",{"_index":287,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["displays",{"_index":43,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{}}}],["dist",{"_index":725,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":39,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["download",{"_index":698,"title":{},"body":{"index.html":{}}}],["duration",{"_index":555,"title":{},"body":{"injectables/NemNisService.html":{}}}],["dynamic",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":738,"title":{},"body":{"index.html":{}}}],["element",{"_index":124,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["enabletracing",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":737,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":558,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["entrycomponents",{"_index":431,"title":{},"body":{"modules/BlocksModule.html":{}}}],["environment",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":499,"title":{},"body":{"injectables/NemNisService.html":{}}}],["event",{"_index":354,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["example",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["execute",{"_index":734,"title":{},"body":{"index.html":{}}}],["explorer",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["explorerblockviewmodel",{"_index":444,"title":{"interfaces/ExplorerBlockViewModel.html":{}},"body":{"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"coverage.html":{}}}],["explorerblockviewmodeldata",{"_index":446,"title":{"interfaces/ExplorerBlockViewModelData.html":{}},"body":{"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"coverage.html":{}}}],["explorertransferviewmodel",{"_index":447,"title":{"interfaces/ExplorerTransferViewModel.html":{}},"body":{"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"coverage.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{}}}],["exports",{"_index":152,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"overview.html":{}}}],["failure",{"_index":564,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["false",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BlocksComponent.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":567,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["fee",{"_index":305,"title":{},"body":{"components/BlockTxesComponent.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["fetch",{"_index":70,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{}}}],["fetchaccount",{"_index":58,"title":{},"body":{"components/AccountsComponent.html":{},"injectables/NemNisService.html":{}}}],["fetchaccount(address",{"_index":71,"title":{},"body":{"components/AccountsComponent.html":{},"injectables/NemNisService.html":{}}}],["fetchblocks",{"_index":340,"title":{},"body":{"components/BlocksComponent.html":{}}}],["fetchblocks(pageevent",{"_index":349,"title":{},"body":{"components/BlocksComponent.html":{}}}],["fetchblockspublic",{"_index":341,"title":{},"body":{"components/BlocksComponent.html":{},"injectables/NemNisService.html":{}}}],["fetchblockspublic(height",{"_index":355,"title":{},"body":{"components/BlocksComponent.html":{},"injectables/NemNisService.html":{}}}],["fetchchainheight",{"_index":489,"title":{},"body":{"injectables/NemNisService.html":{}}}],["fetchchainheight(callbackfunction",{"_index":511,"title":{},"body":{"injectables/NemNisService.html":{}}}],["fetchheight",{"_index":399,"title":{},"body":{"components/BlocksComponent.html":{}}}],["fetchnodes",{"_index":490,"title":{},"body":{"injectables/NemNisService.html":{},"components/NodesComponent.html":{}}}],["fetchnodes(callbackfunction",{"_index":513,"title":{},"body":{"injectables/NemNisService.html":{}}}],["field",{"_index":117,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["files",{"_index":717,"title":{},"body":{"index.html":{}}}],["first",{"_index":357,"title":{},"body":{"components/BlocksComponent.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{}}}],["flag",{"_index":728,"title":{},"body":{"index.html":{}}}],["float",{"_index":422,"title":{},"body":{"components/BlocksComponent.html":{}}}],["forkjoin",{"_index":526,"title":{},"body":{"injectables/NemNisService.html":{}}}],["form",{"_index":116,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{}}}],["formsmodule",{"_index":165,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{}}}],["forward",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotfoundComponent.html":{}}}],["full",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":508,"title":{},"body":{"injectables/NemNisService.html":{}}}],["further",{"_index":740,"title":{},"body":{"index.html":{}}}],["generate",{"_index":720,"title":{},"body":{"index.html":{}}}],["generated",{"_index":688,"title":{},"body":{"index.html":{}}}],["getting",{"_index":684,"title":{"index.html":{}},"body":{}}],["given",{"_index":505,"title":{},"body":{"injectables/NemNisService.html":{}}}],["go",{"_index":742,"title":{},"body":{"index.html":{}}}],["graph",{"_index":747,"title":{},"body":{"modules.html":{}}}],["h",{"_index":540,"title":{},"body":{"injectables/NemNisService.html":{}}}],["h3",{"_index":112,"title":{},"body":{"components/AccountsComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["h4",{"_index":325,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["hammerjs",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["harvested",{"_index":108,"title":{},"body":{"components/AccountsComponent.html":{}}}],["harvestedblocks",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["hash",{"_index":448,"title":{},"body":{"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{}}}],["height",{"_index":271,"title":{"interfaces/Height.html":{}},"body":{"interfaces/Block.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/Height.html":{},"injectables/NemNisService.html":{},"coverage.html":{}}}],["height.height",{"_index":541,"title":{},"body":{"injectables/NemNisService.html":{}}}],["heights",{"_index":539,"title":{},"body":{"injectables/NemNisService.html":{}}}],["heights.map",{"_index":543,"title":{},"body":{"injectables/NemNisService.html":{}}}],["heights.push({height",{"_index":542,"title":{},"body":{"injectables/NemNisService.html":{}}}],["help",{"_index":741,"title":{},"body":{"index.html":{}}}],["hexadecimal",{"_index":466,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["hh:mm:ss",{"_index":324,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["host",{"_index":573,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{}}}],["html",{"_index":123,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["http",{"_index":497,"title":{},"body":{"injectables/NemNisService.html":{}}}],["http://localhost:4200",{"_index":714,"title":{},"body":{"index.html":{}}}],["http://localhost:7890",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["http://san.nem.ninja:7890",{"_index":522,"title":{},"body":{"injectables/NemNisService.html":{}}}],["httpclient",{"_index":493,"title":{},"body":{"injectables/NemNisService.html":{}}}],["httpclientmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nem.io/downloads",{"_index":697,"title":{},"body":{"index.html":{}}}],["https://nemnodes.org/nodes",{"_index":692,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":559,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["implements",{"_index":47,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["importance",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{}}}],["imports",{"_index":161,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{}}}],["inactive",{"_index":563,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{}}}],["init",{"_index":360,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["initblocks",{"_index":342,"title":{},"body":{"components/BlocksComponent.html":{}}}],["inject",{"_index":628,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["inject(mat_dialog_data",{"_index":626,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["injectable",{"_index":483,"title":{"injectables/NemNisService.html":{}},"body":{"injectables/NemNisService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":484,"title":{},"body":{"injectables/NemNisService.html":{}}}],["innerhash",{"_index":451,"title":{},"body":{"interfaces/ExplorerTransferViewModel.html":{}}}],["input",{"_index":46,"title":{},"body":{"components/AccountsComponent.html":{},"components/BlockTxesComponent.html":{}}}],["inputs",{"_index":289,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["install",{"_index":694,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"interfaces/Block.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"interfaces/Transaction.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"interfaces/Block.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"interfaces/Transaction.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"interfaces/Block.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"interfaces/Transaction.html":{},"overview.html":{}}}],["interfaces/account",{"_index":84,"title":{},"body":{"components/AccountsComponent.html":{},"injectables/NemNisService.html":{}}}],["interfaces/block",{"_index":386,"title":{},"body":{"components/BlocksComponent.html":{},"injectables/NemNisService.html":{}}}],["interfaces/chain",{"_index":385,"title":{},"body":{"components/BlocksComponent.html":{},"injectables/NemNisService.html":{}}}],["interfaces/node",{"_index":524,"title":{},"body":{"injectables/NemNisService.html":{},"components/NodesComponent.html":{}}}],["interfaces/transaction",{"_index":388,"title":{},"body":{"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{}}}],["item.key",{"_index":631,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["item.value",{"_index":632,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["js",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":736,"title":{},"body":{"index.html":{}}}],["key",{"_index":574,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["label",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AppComponent.html":{}}}],["last",{"_index":412,"title":{},"body":{"components/BlocksComponent.html":{}}}],["legend",{"_index":122,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"overview.html":{}}}],["letter",{"_index":93,"title":{},"body":{"components/AccountsComponent.html":{}}}],["letters",{"_index":100,"title":{},"body":{"components/AccountsComponent.html":{}}}],["link",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["link.label",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["links",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["linux",{"_index":707,"title":{},"body":{"index.html":{}}}],["list",{"_index":691,"title":{},"body":{"index.html":{}}}],["list/reachable",{"_index":551,"title":{},"body":{"injectables/NemNisService.html":{}}}],["loading",{"_index":335,"title":{},"body":{"components/BlocksComponent.html":{}}}],["locally",{"_index":693,"title":{},"body":{"index.html":{}}}],["mat",{"_index":326,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["mat_dialog_data",{"_index":629,"title":{},"body":{"components/TxesDetailsComponent.html":{}}}],["matbuttonmodule",{"_index":170,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{}}}],["matching",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":292,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["matdialogmodule",{"_index":433,"title":{},"body":{"modules/BlocksModule.html":{},"modules/NodesModule.html":{}}}],["material",{"_index":294,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["matformfieldmodule",{"_index":172,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{}}}],["maticonmodule",{"_index":173,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{}}}],["matinputmodule",{"_index":171,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{}}}],["matlistmodule",{"_index":169,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{}}}],["matpaginator",{"_index":380,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["matpaginatormodule",{"_index":434,"title":{},"body":{"modules/BlocksModule.html":{},"modules/NodesModule.html":{}}}],["matprogressspinnermodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/BlocksModule.html":{}}}],["matsnackbar",{"_index":495,"title":{},"body":{"injectables/NemNisService.html":{}}}],["matsnackbarmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":387,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["mattabledatasource(this.blocks",{"_index":365,"title":{},"body":{"components/BlocksComponent.html":{}}}],["mattabledatasource(this.nodes",{"_index":585,"title":{},"body":{"components/NodesComponent.html":{}}}],["mattablemodule",{"_index":432,"title":{},"body":{"modules/BlocksModule.html":{},"modules/NodesModule.html":{}}}],["mattabsmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":118,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{}}}],["message",{"_index":454,"title":{"interfaces/Message.html":{}},"body":{"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"injectables/NemNisService.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["message.type",{"_index":470,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["messagepipe",{"_index":427,"title":{"pipes/MessagePipe.html":{}},"body":{"modules/BlocksModule.html":{},"pipes/MessagePipe.html":{},"coverage.html":{},"overview.html":{}}}],["messages",{"_index":500,"title":{},"body":{"injectables/NemNisService.html":{}}}],["meta",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["metadata",{"_index":49,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["methods",{"_index":57,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["millis",{"_index":477,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["miscellaneous",{"_index":753,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":322,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["mode",{"_index":458,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["module",{"_index":145,"title":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"overview.html":{}}}],["modules",{"_index":147,"title":{"modules.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":351,"title":{},"body":{"components/BlocksComponent.html":{},"index.html":{}}}],["msnemesis",{"_index":320,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MsNemesisPipe.html":{},"components/TxesDetailsComponent.html":{}}}],["msnemesispipe",{"_index":428,"title":{"pipes/MsNemesisPipe.html":{}},"body":{"modules/BlocksModule.html":{},"pipes/MsNemesisPipe.html":{},"coverage.html":{},"overview.html":{}}}],["multisiginfo",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["n",{"_index":94,"title":{},"body":{"components/AccountsComponent.html":{},"pipes/MessagePipe.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"index.html":{}}}],["navigate",{"_index":713,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["navlinks",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["ndevposk4omr4prtlyfhx4w5qtond7tzdt2dtu4q",{"_index":79,"title":{},"body":{"components/AccountsComponent.html":{}}}],["needed",{"_index":353,"title":{},"body":{"components/BlocksComponent.html":{}}}],["nem",{"_index":73,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{},"index.html":{}}}],["nemesis",{"_index":480,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["nemesis.pipe",{"_index":438,"title":{},"body":{"modules/BlocksModule.html":{}}}],["nemesis.pipe.ts",{"_index":475,"title":{},"body":{"pipes/MsNemesisPipe.html":{},"coverage.html":{}}}],["nemesis.pipe.ts:14",{"_index":479,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["nemexplorer",{"_index":686,"title":{},"body":{"index.html":{}}}],["nemnis",{"_index":68,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["nemnisservice",{"_index":62,"title":{"injectables/NemNisService.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"coverage.html":{}}}],["networkid",{"_index":569,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["new",{"_index":364,"title":{},"body":{"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":710,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":162,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{}}}],["ngoninit",{"_index":59,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["nis",{"_index":699,"title":{},"body":{"index.html":{}}}],["nis.service",{"_index":83,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["nis.service.ts",{"_index":486,"title":{},"body":{"injectables/NemNisService.html":{},"coverage.html":{}}}],["nis.service.ts:106",{"_index":515,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:121",{"_index":517,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:21",{"_index":523,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:26",{"_index":520,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:27",{"_index":496,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:39",{"_index":503,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:47",{"_index":512,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:64",{"_index":509,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nis.service.ts:91",{"_index":507,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nix.runnis.sh",{"_index":706,"title":{},"body":{"index.html":{}}}],["node",{"_index":187,"title":{"interfaces/Node.html":{}},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"coverage.html":{},"index.html":{}}}],["node.endpoint.host",{"_index":600,"title":{},"body":{"components/NodesComponent.html":{}}}],["node.endpoint.port",{"_index":601,"title":{},"body":{"components/NodesComponent.html":{}}}],["node.endpoint.protocol",{"_index":599,"title":{},"body":{"components/NodesComponent.html":{}}}],["node/peer",{"_index":550,"title":{},"body":{"injectables/NemNisService.html":{}}}],["nodeclicked",{"_index":579,"title":{},"body":{"components/NodesComponent.html":{}}}],["nodeclicked(node",{"_index":583,"title":{},"body":{"components/NodesComponent.html":{}}}],["nodecollection",{"_index":514,"title":{"interfaces/NodeCollection.html":{}},"body":{"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"coverage.html":{}}}],["nodeendpoint",{"_index":560,"title":{"interfaces/NodeEndPoint.html":{}},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"coverage.html":{}}}],["nodeidentity",{"_index":561,"title":{"interfaces/NodeIdentity.html":{}},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"coverage.html":{}}}],["nodemetadata",{"_index":562,"title":{"interfaces/NodeMetaData.html":{}},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"coverage.html":{}}}],["nodes",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{}}}],["nodes'},{'name",{"_index":137,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["nodes.component",{"_index":611,"title":{},"body":{"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{}}}],["nodes.component.css",{"_index":576,"title":{},"body":{"components/NodesComponent.html":{}}}],["nodes.component.html",{"_index":577,"title":{},"body":{"components/NodesComponent.html":{}}}],["nodes/nodes.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["nodescomponent",{"_index":136,"title":{"components/NodesComponent.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodeselected",{"_index":578,"title":{},"body":{"components/NodesComponent.html":{}}}],["nodesmodule",{"_index":244,"title":{"modules/NodesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NodesModule.html":{},"modules.html":{},"overview.html":{}}}],["nodesroutingmodule",{"_index":609,"title":{"modules/NodesRoutingModule.html":{}},"body":{"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["nodeurl",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{}}}],["notfound",{"_index":615,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":139,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["notfound.component.css",{"_index":616,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.html",{"_index":617,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound/notfound.component",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfoundcomponent",{"_index":138,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"interfaces/Block.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"interfaces/Transaction.html":{}}}],["numbers",{"_index":96,"title":{},"body":{"components/AccountsComponent.html":{}}}],["object",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"miscellaneous/variables.html":{}}}],["onerror",{"_index":534,"title":{},"body":{"injectables/NemNisService.html":{}}}],["oninit",{"_index":48,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["open",{"_index":301,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["opendialog",{"_index":288,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["opendialog(transaction",{"_index":299,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["opensnackbar",{"_index":491,"title":{},"body":{"injectables/NemNisService.html":{}}}],["opensnackbar(message",{"_index":516,"title":{},"body":{"injectables/NemNisService.html":{}}}],["optional",{"_index":67,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/NodeCollection.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["options",{"_index":379,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":373,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["overview",{"_index":749,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":667,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":328,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["page",{"_index":377,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{}}}],["pageevent",{"_index":336,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["pageevent.length",{"_index":413,"title":{},"body":{"components/BlocksComponent.html":{}}}],["pageevent.pageindex",{"_index":410,"title":{},"body":{"components/BlocksComponent.html":{}}}],["pageevent.pagesize",{"_index":411,"title":{},"body":{"components/BlocksComponent.html":{}}}],["pagesizeoptions",{"_index":337,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["paginator",{"_index":338,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["param",{"_index":86,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["path",{"_index":182,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesRoutingModule.html":{}}}],["pathmatch",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":456,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["pipe",{"_index":460,"title":{"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{}},"body":{"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":461,"title":{},"body":{"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"overview.html":{}}}],["pipes/message.pipe",{"_index":440,"title":{},"body":{"modules/BlocksModule.html":{}}}],["pipes/ms",{"_index":437,"title":{},"body":{"modules/BlocksModule.html":{}}}],["pipetransform",{"_index":468,"title":{},"body":{"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{}}}],["platform",{"_index":570,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["port",{"_index":572,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["prevblockhash",{"_index":272,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Data.html":{}}}],["private",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{}}}],["prod",{"_index":727,"title":{},"body":{"index.html":{}}}],["production",{"_index":729,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":687,"title":{},"body":{"index.html":{}}}],["proper",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{}}}],["protocol",{"_index":571,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{}}}],["protractor",{"_index":739,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":528,"title":{},"body":{"injectables/NemNisService.html":{}}}],["providers",{"_index":151,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"overview.html":{}}}],["public",{"_index":285,"title":{},"body":{"components/BlockTxesComponent.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/TxesDetailsComponent.html":{}}}],["publickey",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["readme",{"_index":744,"title":{},"body":{"index.html":{}}}],["recipient",{"_index":303,"title":{},"body":{"components/BlockTxesComponent.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["redirectto",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":716,"title":{},"body":{"index.html":{}}}],["remoteaccount",{"_index":459,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["remotestatus",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"overview.html":{}}}],["resp",{"_index":89,"title":{},"body":{"components/AccountsComponent.html":{},"components/BlocksComponent.html":{}}}],["resp.account",{"_index":90,"title":{},"body":{"components/AccountsComponent.html":{}}}],["resp.height",{"_index":396,"title":{},"body":{"components/BlocksComponent.html":{}}}],["response",{"_index":401,"title":{},"body":{"components/BlocksComponent.html":{}}}],["response.data",{"_index":597,"title":{},"body":{"components/NodesComponent.html":{}}}],["response.foreach((x",{"_index":403,"title":{},"body":{"components/BlocksComponent.html":{}}}],["response[0].height",{"_index":402,"title":{},"body":{"components/BlocksComponent.html":{}}}],["result",{"_index":31,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":473,"title":{},"body":{"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["right",{"_index":423,"title":{},"body":{"components/BlocksComponent.html":{}}}],["root",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{}}}],["root'},{'name",{"_index":130,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["router",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":177,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesRoutingModule.html":{}}}],["routermodule.forchild(accountsroutes",{"_index":183,"title":{},"body":{"modules/AccountsRoutingModule.html":{}}}],["routermodule.forchild(blocksroutes",{"_index":443,"title":{},"body":{"modules/BlocksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":613,"title":{},"body":{"modules/NodesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":178,"title":{"routes.html":{}},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":167,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{}}}],["routing.module.ts",{"_index":176,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlocksRoutingModule.html":{},"modules/NodesRoutingModule.html":{}}}],["run",{"_index":709,"title":{},"body":{"index.html":{}}}],["running",{"_index":730,"title":{},"body":{"index.html":{}}}],["runnis",{"_index":704,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":527,"title":{},"body":{"injectables/NemNisService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":719,"title":{},"body":{"index.html":{}}}],["search",{"_index":103,"title":{},"body":{"components/AccountsComponent.html":{}}}],["selected",{"_index":347,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["selector",{"_index":50,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["serve",{"_index":711,"title":{},"body":{"index.html":{}}}],["server",{"_index":696,"title":{},"body":{"index.html":{}}}],["service",{"_index":69,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{}}}],["sets",{"_index":346,"title":{},"body":{"components/BlocksComponent.html":{}}}],["signature",{"_index":273,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Data.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["signer",{"_index":274,"title":{},"body":{"interfaces/Block.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["size",{"_index":378,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["snack",{"_index":498,"title":{},"body":{"injectables/NemNisService.html":{}}}],["snackbar",{"_index":494,"title":{},"body":{"injectables/NemNisService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"modules/BlocksRoutingModule.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"modules/NodesModule.html":{},"modules/NodesRoutingModule.html":{},"components/NotfoundComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"index.html":{}}}],["spinner",{"_index":421,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/accounts/accounts",{"_index":175,"title":{},"body":{"modules/AccountsRoutingModule.html":{}}}],["src/app/accounts/accounts.component.ts",{"_index":41,"title":{},"body":{"components/AccountsComponent.html":{},"coverage.html":{}}}],["src/app/accounts/accounts.component.ts:17",{"_index":80,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/accounts/accounts.component.ts:22",{"_index":64,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/accounts/accounts.component.ts:29",{"_index":76,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/accounts/accounts.component.ts:35",{"_index":72,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/accounts/accounts.module.ts",{"_index":160,"title":{},"body":{"modules/AccountsModule.html":{}}}],["src/app/app",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/blocks/block",{"_index":279,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["src/app/blocks/blocks",{"_index":441,"title":{},"body":{"modules/BlocksRoutingModule.html":{}}}],["src/app/blocks/blocks.component.ts",{"_index":330,"title":{},"body":{"components/BlocksComponent.html":{},"coverage.html":{}}}],["src/app/blocks/blocks.component.ts:102",{"_index":356,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:118",{"_index":345,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:127",{"_index":350,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:20",{"_index":361,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:25",{"_index":363,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:30",{"_index":362,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:35",{"_index":383,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:40",{"_index":368,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:45",{"_index":366,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:50",{"_index":376,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:55",{"_index":370,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:60",{"_index":372,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:65",{"_index":343,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:76",{"_index":359,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.component.ts:84",{"_index":358,"title":{},"body":{"components/BlocksComponent.html":{}}}],["src/app/blocks/blocks.module.ts",{"_index":430,"title":{},"body":{"modules/BlocksModule.html":{}}}],["src/app/interfaces/account.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"coverage.html":{}}}],["src/app/interfaces/block",{"_index":307,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["src/app/interfaces/block.ts",{"_index":270,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Data.html":{},"coverage.html":{}}}],["src/app/interfaces/chain.ts",{"_index":453,"title":{},"body":{"interfaces/Height.html":{},"coverage.html":{}}}],["src/app/interfaces/explorerblockviewmodel.ts",{"_index":445,"title":{},"body":{"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"coverage.html":{}}}],["src/app/interfaces/explorertransferviewmodel.ts",{"_index":450,"title":{},"body":{"interfaces/ExplorerTransferViewModel.html":{},"coverage.html":{}}}],["src/app/interfaces/node.ts",{"_index":557,"title":{},"body":{"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"coverage.html":{}}}],["src/app/interfaces/transaction",{"_index":308,"title":{},"body":{"components/BlockTxesComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["src/app/interfaces/transaction.ts",{"_index":455,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{},"coverage.html":{}}}],["src/app/nem",{"_index":485,"title":{},"body":{"injectables/NemNisService.html":{},"coverage.html":{}}}],["src/app/nodes/nodes",{"_index":612,"title":{},"body":{"modules/NodesRoutingModule.html":{}}}],["src/app/nodes/nodes.component.ts",{"_index":575,"title":{},"body":{"components/NodesComponent.html":{},"coverage.html":{}}}],["src/app/nodes/nodes.component.ts:18",{"_index":588,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:23",{"_index":589,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:28",{"_index":587,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:33",{"_index":586,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:38",{"_index":593,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:43",{"_index":590,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:48",{"_index":594,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:53",{"_index":580,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:63",{"_index":582,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:71",{"_index":581,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.component.ts:83",{"_index":584,"title":{},"body":{"components/NodesComponent.html":{}}}],["src/app/nodes/nodes.module.ts",{"_index":610,"title":{},"body":{"modules/NodesModule.html":{}}}],["src/app/notfound/notfound.component.ts",{"_index":614,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/notfound/notfound.component.ts:11",{"_index":618,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["src/app/notfound/notfound.component.ts:15",{"_index":619,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["src/app/pipes/message.pipe.ts",{"_index":462,"title":{},"body":{"pipes/MessagePipe.html":{},"coverage.html":{}}}],["src/app/pipes/message.pipe.ts:16",{"_index":465,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["src/app/pipes/ms",{"_index":474,"title":{},"body":{"pipes/MsNemesisPipe.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":700,"title":{},"body":{"index.html":{}}}],["start",{"_index":92,"title":{},"body":{"components/AccountsComponent.html":{}}}],["started",{"_index":685,"title":{"index.html":{}},"body":{}}],["state",{"_index":371,"title":{},"body":{"components/BlocksComponent.html":{}}}],["statements",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["stored",{"_index":724,"title":{},"body":{"index.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"interfaces/Transaction.html":{}}}],["styles",{"_index":38,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["styleurls",{"_index":53,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["subscribe((resp",{"_index":545,"title":{},"body":{"injectables/NemNisService.html":{}}}],["subscribes",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":745,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":746,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":469,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["syncronization",{"_index":521,"title":{},"body":{"injectables/NemNisService.html":{}}}],["tab.link",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":37,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["templateurl",{"_index":55,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["test",{"_index":733,"title":{},"body":{"index.html":{}}}],["tests",{"_index":732,"title":{},"body":{"index.html":{}}}],["text",{"_index":113,"title":{},"body":{"components/AccountsComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["this.account",{"_index":91,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.activelinkindex",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["this.blocks",{"_index":406,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.blocks.length",{"_index":397,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.blocks.push(x",{"_index":404,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.blocks[this.blocks.length",{"_index":414,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.blockselected",{"_index":407,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.chainheight",{"_index":395,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.datasource.data",{"_index":405,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["this.datasource.paginator",{"_index":389,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["this.dialog.open(txesdetailscomponent",{"_index":313,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["this.fetchblockspublic(height",{"_index":416,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.fetchblockspublic(resp.height",{"_index":398,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.fetchnodes",{"_index":595,"title":{},"body":{"components/NodesComponent.html":{}}}],["this.http.get(url",{"_index":548,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.http.get(url).subscribe((resp",{"_index":532,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.http.get(url).subscribe(resp",{"_index":552,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.http.post(url",{"_index":544,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.initblocks",{"_index":391,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.loading",{"_index":392,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.navlinks",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["this.navlinks.indexof(this.navlinks.find(tab",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["this.nemnis.changenode(nodeurl",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["this.nemnis.changenode(url",{"_index":602,"title":{},"body":{"components/NodesComponent.html":{}}}],["this.nemnis.currentnode.subscribe(nodeurl",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["this.nemnis.fetchaccount(address",{"_index":88,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.nemnis.fetchblockspublic(fetchheight",{"_index":400,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.nemnis.fetchchainheight((resp",{"_index":394,"title":{},"body":{"components/BlocksComponent.html":{}}}],["this.nemnis.fetchnodes((response",{"_index":596,"title":{},"body":{"components/NodesComponent.html":{}}}],["this.nodeselected",{"_index":598,"title":{},"body":{"components/NodesComponent.html":{}}}],["this.nodeurl",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.nodeurl.asobservable",{"_index":518,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.nodeurl.next(url",{"_index":529,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.nodeurl.value",{"_index":530,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.opensnackbar(onerror.message",{"_index":536,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.paginator",{"_index":390,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["this.router.events.subscribe((res",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.url",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open(message",{"_index":553,"title":{},"body":{"injectables/NemNisService.html":{}}}],["this.transactions",{"_index":408,"title":{},"body":{"components/BlocksComponent.html":{}}}],["timestamp",{"_index":275,"title":{},"body":{"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/Message.html":{},"pipes/MsNemesisPipe.html":{},"interfaces/Transaction.html":{}}}],["title",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["tracactions",{"_index":348,"title":{},"body":{"components/BlocksComponent.html":{}}}],["transaction",{"_index":278,"title":{"interfaces/Transaction.html":{}},"body":{"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["transaction.amount",{"_index":317,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["transaction.fee",{"_index":318,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["transaction.recipient",{"_index":316,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["transaction.timestamp",{"_index":319,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["transactions",{"_index":276,"title":{},"body":{"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{}}}],["transform",{"_index":463,"title":{},"body":{"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{}}}],["transform(message",{"_index":464,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["transform(value",{"_index":478,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["tree",{"_index":40,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["true",{"_index":393,"title":{},"body":{"components/BlocksComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":452,"title":{},"body":{"interfaces/ExplorerTransferViewModel.html":{}}}],["txes",{"_index":141,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["txes'},{'name",{"_index":135,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["txes.component",{"_index":436,"title":{},"body":{"modules/BlocksModule.html":{}}}],["txes.component.css",{"_index":283,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.html",{"_index":284,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.ts",{"_index":281,"title":{},"body":{"components/BlockTxesComponent.html":{},"coverage.html":{}}}],["txes.component.ts:21",{"_index":296,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.ts:26",{"_index":297,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.ts:31",{"_index":293,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.ts:36",{"_index":302,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.ts:38",{"_index":298,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes.component.ts:45",{"_index":300,"title":{},"body":{"components/BlockTxesComponent.html":{}}}],["txes/block",{"_index":280,"title":{},"body":{"components/BlockTxesComponent.html":{},"modules/BlocksModule.html":{},"coverage.html":{}}}],["txes/txes",{"_index":439,"title":{},"body":{"modules/BlocksModule.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{}}}],["txesdetailscomponent",{"_index":140,"title":{"components/TxesDetailsComponent.html":{}},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"modules/BlocksModule.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{},"components/AccountsComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"interfaces/Data.html":{},"interfaces/ExplorerBlockViewModel.html":{},"interfaces/ExplorerBlockViewModelData.html":{},"interfaces/ExplorerTransferViewModel.html":{},"interfaces/Height.html":{},"interfaces/Message.html":{},"pipes/MessagePipe.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"interfaces/Transaction.html":{},"components/TxesDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":501,"title":{},"body":{"injectables/NemNisService.html":{}}}],["undo",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["unit",{"_index":731,"title":{},"body":{"index.html":{}}}],["unpack",{"_index":702,"title":{},"body":{"index.html":{}}}],["url",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"index.html":{}}}],["use",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["user",{"_index":45,"title":{},"body":{"components/AccountsComponent.html":{}}}],["utc",{"_index":476,"title":{},"body":{"pipes/MsNemesisPipe.html":{}}}],["value",{"_index":78,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"pipes/MsNemesisPipe.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":126,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["variable",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":754,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":277,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Data.html":{},"interfaces/Message.html":{},"interfaces/Node.html":{},"interfaces/NodeCollection.html":{},"interfaces/NodeEndPoint.html":{},"interfaces/NodeIdentity.html":{},"interfaces/NodeMetaData.html":{},"components/NodesComponent.html":{},"interfaces/Transaction.html":{},"index.html":{}}}],["vested",{"_index":106,"title":{},"body":{"components/AccountsComponent.html":{}}}],["vestedbalance",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountInfo.html":{},"interfaces/AccountMetaData.html":{}}}],["via",{"_index":735,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":384,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["viewchild(matpaginator",{"_index":382,"title":{},"body":{"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"injectables/NemNisService.html":{},"components/NodesComponent.html":{},"components/NotfoundComponent.html":{},"components/TxesDetailsComponent.html":{}}}],["width",{"_index":119,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/BlockTxesComponent.html":{},"components/BlocksComponent.html":{},"components/NodesComponent.html":{}}}],["windows",{"_index":705,"title":{},"body":{"index.html":{}}}],["z",{"_index":101,"title":{},"body":{"components/AccountsComponent.html":{}}}],["zone.js",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/BlocksModule.html":{},"modules/NodesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        account\n                                \n                                \n                                        meta\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         AccountInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                    \n                                \n                                \n                                    \n                                        meta:         AccountMetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountMetaData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n  account: AccountInfo;\n  meta: AccountMetaData;\n}\n\nexport interface AccountInfo {\n  address: string;\n  balance: number;\n  vestedBalance: number;\n  importance: number;\n  publicKey: string;\n  label: null;\n  harvestedBlocks: number;\n  multisigInfo: object;\n}\n\ninterface AccountMetaData {\n  status: string;\n  remoteStatus: string;\n  cosignatoryOf: AccountInfo[];\n  cosignatories: AccountInfo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountInfo.html":{"url":"interfaces/AccountInfo.html","title":"interface - AccountInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccountInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        balance\n                                \n                                \n                                        harvestedBlocks\n                                \n                                \n                                        importance\n                                \n                                \n                                        label\n                                \n                                \n                                        multisigInfo\n                                \n                                \n                                        publicKey\n                                \n                                \n                                        vestedBalance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        harvestedBlocks\n                                    \n                                \n                                \n                                    \n                                        harvestedBlocks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        importance\n                                    \n                                \n                                \n                                    \n                                        importance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multisigInfo\n                                    \n                                \n                                \n                                    \n                                        multisigInfo:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicKey\n                                    \n                                \n                                \n                                    \n                                        publicKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vestedBalance\n                                    \n                                \n                                \n                                    \n                                        vestedBalance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n  account: AccountInfo;\n  meta: AccountMetaData;\n}\n\nexport interface AccountInfo {\n  address: string;\n  balance: number;\n  vestedBalance: number;\n  importance: number;\n  publicKey: string;\n  label: null;\n  harvestedBlocks: number;\n  multisigInfo: object;\n}\n\ninterface AccountMetaData {\n  status: string;\n  remoteStatus: string;\n  cosignatoryOf: AccountInfo[];\n  cosignatories: AccountInfo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountMetaData.html":{"url":"interfaces/AccountMetaData.html","title":"interface - AccountMetaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccountMetaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cosignatories\n                                \n                                \n                                        cosignatoryOf\n                                \n                                \n                                        remoteStatus\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cosignatories\n                                    \n                                \n                                \n                                    \n                                        cosignatories:     AccountInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AccountInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cosignatoryOf\n                                    \n                                \n                                \n                                    \n                                        cosignatoryOf:     AccountInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AccountInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteStatus\n                                    \n                                \n                                \n                                    \n                                        remoteStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n  account: AccountInfo;\n  meta: AccountMetaData;\n}\n\nexport interface AccountInfo {\n  address: string;\n  balance: number;\n  vestedBalance: number;\n  importance: number;\n  publicKey: string;\n  label: null;\n  harvestedBlocks: number;\n  multisigInfo: object;\n}\n\ninterface AccountMetaData {\n  status: string;\n  remoteStatus: string;\n  cosignatoryOf: AccountInfo[];\n  cosignatories: AccountInfo[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountsComponent.html":{"url":"components/AccountsComponent.html","title":"component - AccountsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/accounts/accounts.component.ts\n\n\n    \n        Description\n    \n    \n        Displays account data from address of user input.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accounts\n            \n\n            \n                styleUrls\n                ./accounts.component.css\n            \n\n\n\n            \n                templateUrl\n                ./accounts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                address\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchAccount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nemnis: NemNisService)\n                    \n                \n                        \n                            \n                                Defined in src/app/accounts/accounts.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        nemnis\n                                                  \n                                                        \n                                                                        NemNisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAccount\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAccount(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/accounts/accounts.component.ts:35\n                \n            \n\n\n            \n                \n                    Fetch Account data from service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM account address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/accounts/accounts.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/accounts/accounts.component.ts:22\n                            \n                        \n\n                \n                    \n                        NEM account.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NDEVPOSK4OMR4PRTLYFHX4W5QTOND7TZDT2DTU4Q'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/accounts/accounts.component.ts:17\n                            \n                        \n\n                \n                    \n                        NEM account address\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NemNisService } from '../nem-nis.service';\nimport { Account } from '../interfaces/Account';\n\n/**\n * Displays account data from address of user input.\n */\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.css']\n})\nexport class AccountsComponent implements OnInit {\n  /**\n   * NEM account address\n   */\n  address = 'NDEVPOSK4OMR4PRTLYFHX4W5QTOND7TZDT2DTU4Q';\n\n  /**\n   * NEM account.\n   */\n  account: Account;\n\n  /**\n   * @param nemnis Service to fetch data.\n   */\n  constructor(private nemnis: NemNisService) { }\n\n  ngOnInit() { }\n\n  /**\n   * Fetch Account data from service.\n   * @param address NEM account address\n   */\n  fetchAccount(address: string) {\n    this.nemnis.fetchAccount(address, (resp) => {\n      if (resp.account) {\n        this.account = resp;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        Accounts\n\n  \n      \n      \n          Address must start with letter N, containing numbers 0-9 and capital letters A-Z.\n      \n      \n        clear\n      \n      \n        search\n      \n  \n  \n    \n      Address: {{account.account.address}}\n      \n      Balance: {{account.account.balance}}\n      \n      Vested Balance: {{account.account.vestedBalance}}\n      \n      Harvested Blocks: {{account.account.harvestedBlocks}}\n      \n      Importance: {{account.account.importance}}\n    \n  \n\n\n    \n\n    \n                \n                    ./accounts.component.css\n                \n                h3 {\n  text-align: center\n}\n\n.form-field {\n  max-width: 500px;\n  width: 100%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Accounts                        Address must start with letter N, containing numbers 0-9 and capital letters A-Z.                    clear                    search                    Address: {{account.account.address}}            Balance: {{account.account.balance}}            Vested Balance: {{account.account.vestedBalance}}            Harvested Blocks: {{account.account.harvestedBlocks}}            Importance: {{account.account.importance}}      '\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_declarations\n\n\n\ncluster_AccountsModule_imports\n\n\n\n\nAccountsComponent\n\nAccountsComponent\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAccountsComponent->AccountsModule\n\n\n\n\n\nAccountsRoutingModule\n\nAccountsRoutingModule\n\nAccountsModule -->\n\nAccountsRoutingModule->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/accounts/accounts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AccountsRoutingModule } from './accounts-routing.module';\nimport { AccountsComponent } from './accounts.component';\nimport { MatListModule, MatButtonModule, MatInputModule, MatFormFieldModule, MatIconModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AccountsComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountsRoutingModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule\n  ]\n})\nexport class AccountsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsRoutingModule.html":{"url":"modules/AccountsRoutingModule.html","title":"module - AccountsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/accounts/accounts-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountsComponent } from './accounts.component';\n\nconst accountsRoutes: Routes = [\n  { path: 'accounts', component: AccountsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(accountsRoutes)],\n  exports: [RouterModule]\n})\nexport class AccountsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Displays title, current NEM node url and navigation bar.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeLinkIndex\n                            \n                            \n                                navLinks\n                            \n                            \n                                nodeUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeNode\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nemnis: NemNisService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            Subscribes NEM node url with service.\nDefines navigation links.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        nemnis\n                                                  \n                                                        \n                                                                        NemNisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeNode\n                        \n                        \n                    \n                \n            \n            \n                \nchangeNode(nodeUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:72\n                \n            \n\n\n            \n                \n                    Change NEM node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM node url\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeLinkIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Currently activated navigation bar link index\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        Table of navigation bar links\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                        NEM node url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEM - Blockchain Explorer'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                        App title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NemNisService } from './nem-nis.service';\n\n/**\n * Displays title, current NEM node url and navigation bar.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  /**\n   * App title\n   */\n  title = 'NEM - Blockchain Explorer';\n\n  /**\n   * Table of navigation bar links\n   */\n  navLinks: any[];\n\n  /**\n   * Currently activated navigation bar link index\n   */\n  activeLinkIndex = -1;\n\n  /**\n   * NEM node url\n   */\n  nodeUrl: string;\n\n  /**\n   * Subscribes NEM node url with service.\n   * Defines navigation links.\n   * @param nemnis Service to fetch data.\n   * @param router Angular router\n   */\n  constructor(private nemnis: NemNisService, private router: Router) {\n    this.nemnis.currentNode.subscribe(nodeUrl => this.nodeUrl = nodeUrl);\n\n    this.navLinks = [\n      {\n        label: 'Blocks',\n        path: './blocks',\n        index: 0\n      },\n      {\n        label: 'Accounts',\n        path: './accounts',\n        index: 1\n      },\n      {\n        label: 'Nodes',\n        path: './nodes',\n        index: 2\n      },\n    ];\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe((res) => {\n      this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));\n  });\n  }\n\n  /**\n   * Change NEM node\n   * @param nodeUrl NEM node url\n   */\n  changeNode(nodeUrl: string): void {\n    this.nemnis.changeNode(nodeUrl);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n  \n  \n  \n    \n      \n      \n          Use proper url example http://localhost:7890.\n      \n      \n        undo\n      \n      \n        forward\n      \n    \n  \n\n  \n    \n    {{link.label}}\n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .form-field {\n  max-width: 500px;\n  width: 100%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}                                Use proper url example http://localhost:7890.                    undo                    forward                      {{link.label}}      '\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlocksModule\n\nBlocksModule\n\nAppModule -->\n\nBlocksModule->AppModule\n\n\n\n\n\nNodesModule\n\nNodesModule\n\nAppModule -->\n\nNodesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            BlocksModule\n                        \n                        \n                            NodesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { BlocksModule } from './blocks/blocks.module';\nimport { AccountsModule } from './accounts/accounts.module';\nimport { MatToolbarModule, MatTabsModule, MatProgressSpinnerModule, MatSnackBarModule } from '@angular/material';\nimport { NodesModule } from './nodes/nodes.module';\n\nimport { MatListModule, MatButtonModule, MatInputModule, MatFormFieldModule, MatIconModule } from '@angular/material';\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    BlocksModule,\n    AccountsModule,\n    NodesModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatListModule, MatButtonModule, MatInputModule, MatFormFieldModule, MatIconModule, FormsModule,\n    MatProgressSpinnerModule, MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotfoundComponent } from './notfound/notfound.component';\n\n/**\n * Routes to default and not found components.\n */\nconst routes: Routes = [\n  { path: '', redirectTo: '/blocks', pathMatch: 'full' },\n  { path: '**', component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      routes, { enableTracing: false }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Block.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        prevBlockHash\n                                \n                                \n                                        signature\n                                \n                                \n                                        signer\n                                \n                                \n                                        timeStamp\n                                \n                                \n                                        transactions\n                                \n                                \n                                        type\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevBlockHash\n                                    \n                                \n                                \n                                    \n                                        prevBlockHash:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                    \n                                \n                                \n                                    \n                                        signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signer\n                                    \n                                \n                                \n                                    \n                                        signer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactions\n                                    \n                                \n                                \n                                    \n                                        transactions:         Transaction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transaction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from './Transaction';\n\nexport interface Block {\n  timeStamp: number;\n  signature: string;\n  prevBlockHash: Data;\n  type: number;\n  transactions: Transaction[];\n  version: number;\n  signer: string;\n  height: number;\n}\n\ninterface Data {\n  data: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockTxesComponent.html":{"url":"components/BlockTxesComponent.html","title":"component - BlockTxesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlockTxesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/blocks/block-txes/block-txes.component.ts\n\n\n    \n        Description\n    \n    \n        Display transactions in block.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-block-txes\n            \n\n            \n                styleUrls\n                ./block-txes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./block-txes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSelected\n                            \n                            \n                                transactions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/blocks/block-txes/block-txes.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material design Dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSelected\n                    \n                \n                \n                    \n                        Type :         Block\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/blocks/block-txes/block-txes.component.ts:21\n                            \n                        \n                \n                    \n                        NEM block.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        transactions\n                    \n                \n                \n                    \n                        Type :         Transaction[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/blocks/block-txes/block-txes.component.ts:26\n                            \n                        \n                \n                    \n                        NEM transactions to display.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/block-txes/block-txes.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(transaction: Transaction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/block-txes/block-txes.component.ts:45\n                \n            \n\n\n            \n                \n                    Open dialog of transaction details.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                Transaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM transaction\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/block-txes/block-txes.component.ts:36\n                            \n                        \n\n                \n                    \n                        Material design Dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['recipient', 'amount', 'fee', 'timeStamp']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/block-txes/block-txes.component.ts:31\n                            \n                        \n\n                \n                    \n                        Table columns to display.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Block } from 'src/app/interfaces/Block';\nimport { Transaction } from 'src/app/interfaces/Transaction';\nimport { TxesDetailsComponent } from './txes-details/txes-details.component';\nimport { MatDialog } from '@angular/material';\n\n/**\n * Display transactions in block.\n */\n@Component({\n  selector: 'app-block-txes',\n  templateUrl: './block-txes.component.html',\n  styleUrls: ['./block-txes.component.css']\n})\nexport class BlockTxesComponent implements OnInit {\n\n  /**\n   * NEM block.\n   */\n  @Input()\n  blockSelected: Block;\n  /**\n   * NEM transactions to display.\n   */\n  @Input()\n  transactions: Transaction[];\n\n  /**\n   * Table columns to display.\n   */\n  displayedColumns: string[] = ['recipient', 'amount', 'fee', 'timeStamp'];\n\n  /**\n   * @param dialog Material design Dialog\n   */\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Open dialog of transaction details.\n   * @param transaction NEM transaction\n   */\n  openDialog(transaction: Transaction): void {\n    const dialogRef = this.dialog.open(TxesDetailsComponent, {\n      width: '90%',\n      data: transaction\n    });\n  }\n}\n\n    \n\n    \n        \n  Txes in Block: {{blockSelected.height}}\n  \n\n      \n         Recipient \n         {{transaction.recipient}} \n        \n\n    \n       Amount \n       {{transaction.amount}} \n    \n    \n    \n       Fee \n       {{transaction.fee}} \n    \n    \n    \n       TimeStamp \n       {{transaction.timeStamp | msNemesis | date:\"yyyy-MM-dd HH:mm:ss\"}} \n    \n\n    \n    \n  \n\n    \n\n    \n                \n                    ./block-txes.component.css\n                \n                h4 {\n  text-align: center\n}\ntable {\n  width: 100%;\n}\n.mat-cell {\n  padding: 8px 8px 8px 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Txes in Block: {{blockSelected.height}}                 Recipient          {{transaction.recipient}}                    Amount        {{transaction.amount}}                    Fee        {{transaction.fee}}                    TimeStamp        {{transaction.timeStamp | msNemesis | date:\"yyyy-MM-dd HH:mm:ss\"}}               '\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockTxesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlocksComponent.html":{"url":"components/BlocksComponent.html","title":"component - BlocksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlocksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/blocks/blocks.component.ts\n\n\n    \n        Description\n    \n    \n        Displays NEM blocks.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blocks\n            \n\n            \n                styleUrls\n                ./blocks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./blocks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                blockSelected\n                            \n                            \n                                chainHeight\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                loading\n                            \n                            \n                                pageEvent\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                transactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockClicked\n                            \n                            \n                                fetchBlocks\n                            \n                            \n                                fetchBlocksPublic\n                            \n                            \n                                initBlocks\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nemnis: NemNisService)\n                    \n                \n                        \n                            \n                                Defined in src/app/blocks/blocks.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        nemnis\n                                                  \n                                                        \n                                                                        NemNisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blockClicked\n                        \n                        \n                    \n                \n            \n            \n                \nblockClicked(block: Block)\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/blocks.component.ts:118\n                \n            \n\n\n            \n                \n                    Sets selected block and tracactions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM block\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nfetchBlocks(pageEvent: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/blocks.component.ts:127\n                \n            \n\n\n            \n                \n                    Fetch more blocks to browse if needed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageEvent\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Paginator event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchBlocksPublic\n                        \n                        \n                    \n                \n            \n            \n                \nfetchBlocksPublic(height: number, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/blocks.component.ts:102\n                \n            \n\n\n            \n                \n                    Fetch blocks from service to table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        height of first block\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        amount of blocks\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initBlocks\n                        \n                        \n                    \n                \n            \n            \n                \ninitBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/blocks.component.ts:84\n                \n            \n\n\n            \n                \n                    Fetch NEM blockchain current height and fetch blocks.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/blocks.component.ts:76\n                \n            \n\n\n            \n                \n                    Init and fetch blocks.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Block[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:20\n                            \n                        \n\n                \n                    \n                        NEM blocks\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blockSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Block\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:30\n                            \n                        \n\n                \n                    \n                        NEM block selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chainHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Height\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:25\n                            \n                        \n\n                \n                    \n                        NEM blockchain current height.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource(this.blocks)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:45\n                            \n                        \n\n                \n                    \n                        Data source of displayed table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['height', 'signer', 'timeStamp', 'txes']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:40\n                            \n                        \n\n                \n                    \n                        Table columns to display.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:55\n                            \n                        \n\n                \n                    \n                        Loading state of data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PageEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:60\n                            \n                        \n\n                \n                    \n                        Table paginator output event.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [5, 10]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:50\n                            \n                        \n\n                \n                    \n                        Page size options for table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:65\n                            \n                        \n\n                \n                    \n                        Paginator of table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/blocks.component.ts:35\n                            \n                        \n\n                \n                    \n                        NEM transactions in selected block\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NemNisService } from '../nem-nis.service';\nimport { Height } from '../interfaces/Chain';\nimport { Block } from '../interfaces/Block';\nimport { MatTableDataSource, MatPaginator, PageEvent } from '@angular/material';\nimport { Transaction } from '../interfaces/Transaction';\n\n/**\n * Displays NEM blocks.\n */\n@Component({\n  selector: 'app-blocks',\n  templateUrl: './blocks.component.html',\n  styleUrls: ['./blocks.component.css']\n})\nexport class BlocksComponent implements OnInit {\n  /**\n   * NEM blocks\n   */\n  blocks: Block[] = [];\n\n  /**\n   * NEM blockchain current height.\n   */\n  chainHeight: Height;\n\n  /**\n   * NEM block selected.\n   */\n  blockSelected: Block;\n\n  /**\n   * NEM transactions in selected block\n   */\n  transactions: Transaction[] = [];\n\n  /**\n   * Table columns to display.\n   */\n  displayedColumns: string[] = ['height', 'signer', 'timeStamp', 'txes'];\n  \n  /**\n   * Data source of displayed table.\n   */\n  dataSource = new MatTableDataSource(this.blocks);\n\n  /**\n   * Page size options for table.\n   */\n  pageSizeOptions: number[] = [5, 10];\n\n  /**\n   * Loading state of data\n   */\n  loading: boolean;\n\n  /**\n   * Table paginator output event.\n   */\n  pageEvent: PageEvent;\n\n  /**\n   * Paginator of table.\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   * \n   * @param nemnis Service to fetch data.\n   */\n  constructor(private nemnis: NemNisService) { }\n\n  /**\n   * Init and fetch blocks.\n   */\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.initBlocks();\n  }\n\n  /**\n   * Fetch NEM blockchain current height and fetch blocks.\n   */\n  initBlocks() {\n    this.loading = true;\n    this.nemnis.fetchChainHeight((resp) => {\n      this.chainHeight = resp;\n\n      if (resp.height > 0 && this.blocks.length === 0) {\n        this.fetchBlocksPublic(resp.height, 10);\n      }\n\n      this.loading = false;\n    });\n  }\n\n  /**\n   * Fetch blocks from service to table\n   * @param height height of first block\n   * @param amount amount of blocks\n   */\n  fetchBlocksPublic(height: number, amount: number): void {\n    this.loading = true;\n    const fetchHeight: Height = {height};\n    this.nemnis.fetchBlocksPublic(fetchHeight, amount, (response) => {\n      if (response[0].height) {\n        response.forEach((x) => this.blocks.push(x));\n        this.dataSource.data = this.blocks;\n        this.loading = false;\n      }\n    });\n  }\n\n  /**\n   * Sets selected block and tracactions.\n   * @param block NEM block\n   */\n  blockClicked(block: Block): void {\n    this.blockSelected = block;\n    this.transactions = block.transactions;\n  }\n\n  /**\n   * Fetch more blocks to browse if needed.\n   * @param pageEvent Paginator event\n   */\n  fetchBlocks(pageEvent: PageEvent) {\n    const first = pageEvent.pageIndex * pageEvent.pageSize;\n    const last = first + pageEvent.pageSize * 2 - 1;\n\n    if (last > pageEvent.length && this.blocks.length > 0) {\n      const height: number = this.blocks[this.blocks.length - 1].height - 1;\n      this.fetchBlocksPublic(height, pageEvent.pageSize);\n    }\n  }\n}\n\n    \n\n    \n        Blocks\n\n\n\n  \n    \n    \n         Height \n         {{data.height}} \n      \n\n    \n       Signer \n       {{data.signer}} \n    \n\n    \n       TimeStamp \n       {{data.timeStamp | msNemesis | date:\"yyyy-MM-dd HH:mm:ss\"}} \n    \n\n    \n       Txes \n       {{data.transactions.length}} \n    \n\n    \n    \n  \n  \n  \n    \n  \n  \n  \n  \n\n\n\n 0\">\n  \n\n    \n\n    \n                \n                    ./blocks.component.css\n                \n                h3 {\n  text-align: center\n}\ntable {\n    width: 100%;\n}\n.spinner {\n  float: right;\n}\n.mat-cell {\n  padding: 8px 8px 8px 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Blocks                   Height          {{data.height}}                  Signer        {{data.signer}}                TimeStamp        {{data.timeStamp | msNemesis | date:\"yyyy-MM-dd HH:mm:ss\"}}                Txes        {{data.transactions.length}}                                0\">  '\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlocksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlocksModule.html":{"url":"modules/BlocksModule.html","title":"module - BlocksModule","body":"\n                   \n\n\n\n\n    Modules\n    BlocksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlocksModule\n\n\n\ncluster_BlocksModule_declarations\n\n\n\ncluster_BlocksModule_imports\n\n\n\n\nBlockTxesComponent\n\nBlockTxesComponent\n\n\n\nBlocksModule\n\nBlocksModule\n\nBlocksModule -->\n\nBlockTxesComponent->BlocksModule\n\n\n\n\n\nBlocksComponent\n\nBlocksComponent\n\nBlocksModule -->\n\nBlocksComponent->BlocksModule\n\n\n\n\n\nMessagePipe\n\nMessagePipe\n\nBlocksModule -->\n\nMessagePipe->BlocksModule\n\n\n\n\n\nMsNemesisPipe\n\nMsNemesisPipe\n\nBlocksModule -->\n\nMsNemesisPipe->BlocksModule\n\n\n\n\n\nTxesDetailsComponent\n\nTxesDetailsComponent\n\nBlocksModule -->\n\nTxesDetailsComponent->BlocksModule\n\n\n\n\n\nBlocksRoutingModule\n\nBlocksRoutingModule\n\nBlocksModule -->\n\nBlocksRoutingModule->BlocksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/blocks/blocks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockTxesComponent\n                        \n                        \n                            BlocksComponent\n                        \n                        \n                            MessagePipe\n                        \n                        \n                            MsNemesisPipe\n                        \n                        \n                            TxesDetailsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TxesDetailsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlocksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatDialogModule, MatPaginatorModule, MatProgressSpinnerModule } from '@angular/material';\n\nimport { BlocksRoutingModule } from './blocks-routing.module';\nimport { BlocksComponent } from './blocks.component';\nimport { BlockTxesComponent } from './block-txes/block-txes.component';\nimport { MsNemesisPipe } from '../pipes/ms-nemesis.pipe';\nimport { TxesDetailsComponent } from './block-txes/txes-details/txes-details.component';\nimport { MessagePipe } from '../pipes/message.pipe';\n\n@NgModule({\n  declarations: [\n    BlocksComponent,\n    BlockTxesComponent,\n    MsNemesisPipe,\n    TxesDetailsComponent,\n    MessagePipe\n  ],\n  imports: [\n    CommonModule,\n    BlocksRoutingModule,\n    MatTableModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule\n  ],\n  entryComponents: [\n    TxesDetailsComponent\n  ]\n})\nexport class BlocksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlocksRoutingModule.html":{"url":"modules/BlocksRoutingModule.html","title":"module - BlocksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlocksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/blocks/blocks-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BlocksComponent } from './blocks.component';\n\nconst blocksRoutes: Routes = [\n  { path: 'blocks', component: BlocksComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(blocksRoutes)],\n  exports: [RouterModule]\n})\nexport class BlocksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Block.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from './Transaction';\n\nexport interface Block {\n  timeStamp: number;\n  signature: string;\n  prevBlockHash: Data;\n  type: number;\n  transactions: Transaction[];\n  version: number;\n  signer: string;\n  height: number;\n}\n\ninterface Data {\n  data: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerBlockViewModel.html":{"url":"interfaces/ExplorerBlockViewModel.html","title":"interface - ExplorerBlockViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExplorerBlockViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ExplorerBlockViewModel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     ExplorerBlockViewModelData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExplorerBlockViewModelData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Block } from './Block';\nimport { ExplorerTransferViewModel } from './ExplorerTransferViewModel';\n\nexport interface ExplorerBlockViewModel {\n  data: ExplorerBlockViewModelData[];\n}\n\nexport interface ExplorerBlockViewModelData {\n  txes: ExplorerTransferViewModel[];\n  block: Block;\n  hash: string;\n  difficulty: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerBlockViewModelData.html":{"url":"interfaces/ExplorerBlockViewModelData.html","title":"interface - ExplorerBlockViewModelData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExplorerBlockViewModelData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ExplorerBlockViewModel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        block\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        hash\n                                \n                                \n                                        txes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                    \n                                \n                                \n                                    \n                                        block:         Block\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txes\n                                    \n                                \n                                \n                                    \n                                        txes:         ExplorerTransferViewModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTransferViewModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Block } from './Block';\nimport { ExplorerTransferViewModel } from './ExplorerTransferViewModel';\n\nexport interface ExplorerBlockViewModel {\n  data: ExplorerBlockViewModelData[];\n}\n\nexport interface ExplorerBlockViewModelData {\n  txes: ExplorerTransferViewModel[];\n  block: Block;\n  hash: string;\n  difficulty: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTransferViewModel.html":{"url":"interfaces/ExplorerTransferViewModel.html","title":"interface - ExplorerTransferViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExplorerTransferViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ExplorerTransferViewModel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hash\n                                \n                                \n                                        innerHash\n                                \n                                \n                                        tx\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHash\n                                    \n                                \n                                \n                                    \n                                        innerHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx\n                                    \n                                \n                                \n                                    \n                                        tx:         Transaction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transaction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from './Transaction';\n\nexport interface ExplorerTransferViewModel {\n  tx: Transaction;\n  hash: string;\n  innerHash: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Chain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n  height: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Transaction.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transaction {\n  deadline: number;\n  fee: number;\n  mode: number;\n  remoteAccount: string;\n  signature: string;\n  signer: string;\n  timeStamp: number;\n  type: number;\n  version: number;\n  amount: number;\n  message: Message;\n  recipient: string;\n}\n\nexport interface Message {\n  payload: string;\n  type: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MessagePipe.html":{"url":"pipes/MessagePipe.html","title":"pipe - MessagePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MessagePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/message.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform NEM message to string\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        message\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/message.pipe.ts:16\n                \n            \n\n\n            \n                \n                    Transform Hexadecimal to ASCII\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Message } from '../interfaces/Transaction';\n\n/**\n * Transform NEM message to string\n */\n@Pipe({\n  name: 'message'\n})\nexport class MessagePipe implements PipeTransform {\n\n  /**\n   * Transform Hexadecimal to ASCII\n   * @param message NEM message\n   */\n  transform(message: Message): string {\n    let result = '';\n    switch (message.type) {\n      case 1: {\n        for (let n = 0; n >';\n        break;\n      }\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MsNemesisPipe.html":{"url":"pipes/MsNemesisPipe.html","title":"pipe - MsNemesisPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MsNemesisPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/ms-nemesis.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform NEM timeStamp to UTC millis\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        msNemesis\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/ms-nemesis.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM timeStamp\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform NEM timeStamp to UTC millis\n */\n@Pipe({\n  name: 'msNemesis'\n})\nexport class MsNemesisPipe implements PipeTransform {\n\n  /**\n   * @param value NEM timeStamp\n   */\n  transform(value: number): number {\n    /**\n     * UTC millis of first nemesis block\n     */\n    const nemesis = 1427587585000;\n    if (value >= 0) {\n      return value * 1000 + nemesis;\n    } else {\n      return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NemNisService.html":{"url":"injectables/NemNisService.html","title":"injectable - NemNisService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NemNisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/nem-nis.service.ts\n        \n\n            \n                Description\n            \n            \n                Service fetch NEM node with API's\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentNode\n                            \n                            \n                                    Private\n                                nodeUrl\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeNode\n                            \n                            \n                                fetchAccount\n                            \n                            \n                                fetchBlocksPublic\n                            \n                            \n                                fetchChainHeight\n                            \n                            \n                                fetchNodes\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/nem-nis.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Snack bar for error messages to UI\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeNode\n                        \n                        \n                    \n                \n            \n            \n                \nchangeNode(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nem-nis.service.ts:39\n                \n            \n\n\n            \n                \n                    Changes NEM node to given url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM node url\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAccount\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAccount(address, callBackFunction: (result: Account) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nem-nis.service.ts:91\n                \n            \n\n\n            \n                \n                    Fetch account details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address of account\n\n                                    \n                                \n                                \n                                    callBackFunction\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        for the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchBlocksPublic\n                        \n                        \n                    \n                \n            \n            \n                \nfetchBlocksPublic(height: Height, amount: number, callBackFunction: (result: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nem-nis.service.ts:64\n                \n            \n\n\n            \n                \n                    Fetch blocks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    height\n                                    \n                                                Height\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Chain height of first block\n\n                                    \n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Amount of blocks\n\n                                    \n                                \n                                \n                                    callBackFunction\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        for the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchChainHeight\n                        \n                        \n                    \n                \n            \n            \n                \nfetchChainHeight(callBackFunction: (result: Height) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nem-nis.service.ts:47\n                \n            \n\n\n            \n                \n                    Fetch chain height\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    callBackFunction\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        for the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchNodes\n                        \n                        \n                    \n                \n            \n            \n                \nfetchNodes(callBackFunction: (result: NodeCollection) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nem-nis.service.ts:106\n                \n            \n\n\n            \n                \n                    Fetch NEM nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    callBackFunction\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        for the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackBar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nem-nis.service.ts:121\n                \n            \n\n\n            \n                \n                    Displays message to UI\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeUrl.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nem-nis.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nodeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.url)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nem-nis.service.ts:26\n                            \n                        \n\n                \n                    \n                        NEM node url syncronization with components\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://san.nem.ninja:7890'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nem-nis.service.ts:21\n                            \n                        \n\n                \n                    \n                        Default NEM node url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Block } from './interfaces/Block';\nimport { Height } from './interfaces/Chain';\nimport { Account } from './interfaces/Account';\nimport { NodeCollection } from './interfaces/Node';\nimport { BehaviorSubject, forkJoin } from 'rxjs';\nimport { MatSnackBar } from '@angular/material';\n\n/**\n * Service fetch NEM node with API's\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NemNisService {\n  /**\n   * Default NEM node url\n   */\n  url = 'http://san.nem.ninja:7890';\n\n  /**\n   * NEM node url syncronization with components\n   */\n  private nodeUrl = new BehaviorSubject(this.url);\n  currentNode = this.nodeUrl.asObservable();\n\n  /**\n   * @param http HttpClient\n   * @param snackBar Snack bar for error messages to UI\n   */\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  /**\n   * Changes NEM node to given url\n   * @param url NEM node url\n   */\n  changeNode(url: string) {\n    this.nodeUrl.next(url);\n  }\n\n  /**\n   * Fetch chain height\n   * @param callBackFunction for the result\n   */\n  fetchChainHeight(callBackFunction: (result: Height) => void): void {\n    const url = this.nodeUrl.value + '/chain/height';\n    this.http.get(url).subscribe((resp) => {\n      callBackFunction(resp);\n    }, (onError) => {\n      console.log(onError);\n      this.openSnackBar(onError.message);\n      callBackFunction(onError);\n    });\n  }\n\n  /**\n   * Fetch blocks\n   * @param height Chain height of first block\n   * @param amount Amount of blocks\n   * @param callBackFunction for the result\n   */\n  fetchBlocksPublic(height: Height, amount: number, callBackFunction: (result: Block[]) => void): void {\n    const url = this.nodeUrl.value + '/block/at/public';\n    const heights: Height[] = [];\n    for (let i = amount - 1; i >= 0; i--) {\n      const h: number = height.height - i;\n      if (h > 0) {\n        heights.push({height: h});\n      }\n    }\n    forkJoin(\n      heights.map(\n        i => this.http.post(url, i)\n      )\n    ).subscribe((resp) => {\n        callBackFunction(resp.reverse());\n    }, (onError) => {\n      console.log(onError);\n      this.openSnackBar(onError.message);\n      callBackFunction(onError);\n    });\n  }\n\n  /**\n   * Fetch account details\n   * @param address address of account\n   * @param callBackFunction for the result\n   */\n  fetchAccount(address, callBackFunction: (result: Account) => void): void {\n    const url = this.nodeUrl.value + '/account/get?address=';\n    this.http.get(url + address).subscribe((resp) => {\n      callBackFunction(resp);\n    }, (onError) => {\n      console.log(onError);\n      this.openSnackBar(onError.message);\n      callBackFunction(onError);\n    });\n  }\n\n  /**\n   * Fetch NEM nodes\n   * @param callBackFunction for the result\n   */\n  fetchNodes(callBackFunction: (result: NodeCollection) => void): void {\n    const url = this.nodeUrl.value + '/node/peer-list/reachable';\n    this.http.get(url).subscribe(resp => {\n      callBackFunction(resp);\n    }, (onError) => {\n      console.log(onError);\n      this.openSnackBar(onError.message);\n      callBackFunction(onError);\n    });\n  }\n\n  /**\n   * Displays message to UI\n   * @param message message to display\n   */\n  openSnackBar(message: string) {\n    this.snackBar.open(message, 'dismiss', { duration: 5000 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Node.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoint\n                                \n                                \n                                        identity\n                                \n                                \n                                        metaData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         NodeEndPoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeEndPoint\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identity\n                                    \n                                \n                                \n                                    \n                                        identity:         NodeIdentity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeIdentity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metaData\n                                    \n                                \n                                \n                                    \n                                        metaData:         NodeMetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeMetaData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NodeCollection {\n  inactive?: Node[];\n  failure?: Node[];\n  busy?: Node[];\n  active?: Node[];\n  data?: Node[];\n}\n\nexport interface Node {\n  metaData: NodeMetaData;\n  endpoint: NodeEndPoint;\n  identity: NodeIdentity;\n}\n\ninterface NodeMetaData {\n  features: number;\n  application: string;\n  networkId: number;\n  version: string;\n  platform: string;\n}\n\ninterface NodeEndPoint {\n  protocol: string;\n  port: number;\n  host: string;\n}\n\ninterface NodeIdentity {\n  name: string;\n  'public-key': string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeCollection.html":{"url":"interfaces/NodeCollection.html","title":"interface - NodeCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Node.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        busy\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        failure\n                                \n                                \n                                            Optional\n                                        inactive\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busy\n                                    \n                                \n                                \n                                    \n                                        busy:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failure\n                                    \n                                \n                                \n                                    \n                                        failure:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inactive\n                                    \n                                \n                                \n                                    \n                                        inactive:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NodeCollection {\n  inactive?: Node[];\n  failure?: Node[];\n  busy?: Node[];\n  active?: Node[];\n  data?: Node[];\n}\n\nexport interface Node {\n  metaData: NodeMetaData;\n  endpoint: NodeEndPoint;\n  identity: NodeIdentity;\n}\n\ninterface NodeMetaData {\n  features: number;\n  application: string;\n  networkId: number;\n  version: string;\n  platform: string;\n}\n\ninterface NodeEndPoint {\n  protocol: string;\n  port: number;\n  host: string;\n}\n\ninterface NodeIdentity {\n  name: string;\n  'public-key': string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeEndPoint.html":{"url":"interfaces/NodeEndPoint.html","title":"interface - NodeEndPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeEndPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Node.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        port\n                                \n                                \n                                        protocol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NodeCollection {\n  inactive?: Node[];\n  failure?: Node[];\n  busy?: Node[];\n  active?: Node[];\n  data?: Node[];\n}\n\nexport interface Node {\n  metaData: NodeMetaData;\n  endpoint: NodeEndPoint;\n  identity: NodeIdentity;\n}\n\ninterface NodeMetaData {\n  features: number;\n  application: string;\n  networkId: number;\n  version: string;\n  platform: string;\n}\n\ninterface NodeEndPoint {\n  protocol: string;\n  port: number;\n  host: string;\n}\n\ninterface NodeIdentity {\n  name: string;\n  'public-key': string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeIdentity.html":{"url":"interfaces/NodeIdentity.html","title":"interface - NodeIdentity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeIdentity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Node.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        public-key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public-key\n                                    \n                                \n                                \n                                    \n                                        public-key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NodeCollection {\n  inactive?: Node[];\n  failure?: Node[];\n  busy?: Node[];\n  active?: Node[];\n  data?: Node[];\n}\n\nexport interface Node {\n  metaData: NodeMetaData;\n  endpoint: NodeEndPoint;\n  identity: NodeIdentity;\n}\n\ninterface NodeMetaData {\n  features: number;\n  application: string;\n  networkId: number;\n  version: string;\n  platform: string;\n}\n\ninterface NodeEndPoint {\n  protocol: string;\n  port: number;\n  host: string;\n}\n\ninterface NodeIdentity {\n  name: string;\n  'public-key': string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeMetaData.html":{"url":"interfaces/NodeMetaData.html","title":"interface - NodeMetaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeMetaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Node.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        application\n                                \n                                \n                                        features\n                                \n                                \n                                        networkId\n                                \n                                \n                                        platform\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                    \n                                \n                                \n                                    \n                                        application:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networkId\n                                    \n                                \n                                \n                                    \n                                        networkId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NodeCollection {\n  inactive?: Node[];\n  failure?: Node[];\n  busy?: Node[];\n  active?: Node[];\n  data?: Node[];\n}\n\nexport interface Node {\n  metaData: NodeMetaData;\n  endpoint: NodeEndPoint;\n  identity: NodeIdentity;\n}\n\ninterface NodeMetaData {\n  features: number;\n  application: string;\n  networkId: number;\n  version: string;\n  platform: string;\n}\n\ninterface NodeEndPoint {\n  protocol: string;\n  port: number;\n  host: string;\n}\n\ninterface NodeIdentity {\n  name: string;\n  'public-key': string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodesComponent.html":{"url":"components/NodesComponent.html","title":"component - NodesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NodesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nodes/nodes.component.ts\n\n\n    \n        Description\n    \n    \n        Display table of NEM nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nodes\n            \n\n            \n                styleUrls\n                ./nodes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nodes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                nodes\n                            \n                            \n                                nodeSelected\n                            \n                            \n                                nodeUrl\n                            \n                            \n                                pageEvent\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchNodes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                nodeClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nemnis: NemNisService)\n                    \n                \n                        \n                            \n                                Defined in src/app/nodes/nodes.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        nemnis\n                                                  \n                                                        \n                                                                        NemNisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchNodes\n                        \n                        \n                    \n                \n            \n            \n                \nfetchNodes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nodes/nodes.component.ts:71\n                \n            \n\n\n            \n                \n                    Fetch nodes from service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nodes/nodes.component.ts:63\n                \n            \n\n\n            \n                \n                    Init and fetch nodes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nodeClicked\n                        \n                        \n                    \n                \n            \n            \n                \nnodeClicked(node: Node)\n                \n            \n\n\n            \n                \n                    Defined in src/app/nodes/nodes.component.ts:83\n                \n            \n\n\n            \n                \n                    Change to selected node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NEM node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource(this.nodes)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:33\n                            \n                        \n\n                \n                    \n                        Data source of displayed table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['host', 'name', 'version']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:28\n                            \n                        \n\n                \n                    \n                        Table columns to display.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Node[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:18\n                            \n                        \n\n                \n                    \n                        NEM nodes table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:23\n                            \n                        \n\n                \n                    \n                        Selected node\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:53\n                            \n                        \n\n                \n                    \n                        NEM node url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PageEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:43\n                            \n                        \n\n                \n                    \n                        Table paginator output event.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [5, 10, 20, 50, 100]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:38\n                            \n                        \n\n                \n                    \n                        Page size options for table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/nodes/nodes.component.ts:48\n                            \n                        \n\n                \n                    \n                        Paginator of table.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NemNisService } from '../nem-nis.service';\nimport { Node } from '../interfaces/Node';\nimport { MatTableDataSource, MatPaginator, PageEvent } from '@angular/material';\n\n/**\n * Display table of NEM nodes.\n */\n@Component({\n  selector: 'app-nodes',\n  templateUrl: './nodes.component.html',\n  styleUrls: ['./nodes.component.css']\n})\nexport class NodesComponent implements OnInit {\n  /**\n   * NEM nodes table.\n   */\n  nodes: Node[] = [];\n\n  /**\n   * Selected node\n   */\n  nodeSelected: Node;\n\n  /**\n   * Table columns to display.\n   */\n  displayedColumns: string[] = ['host', 'name', 'version'];\n\n  /**\n   * Data source of displayed table.\n   */\n  dataSource = new MatTableDataSource(this.nodes);\n\n  /**\n   * Page size options for table.\n   */\n  pageSizeOptions: number[] = [5, 10, 20, 50, 100];\n\n  /**\n   * Table paginator output event.\n   */\n  pageEvent: PageEvent;\n\n  /**\n   * Paginator of table.\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   * NEM node url\n   */\n  nodeUrl: string;\n\n  /**\n   * @param nemnis Service to fetch data.\n   */\n  constructor(private nemnis: NemNisService) { }\n\n  /**\n   * Init and fetch nodes\n   */\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.fetchNodes();\n  }\n\n  /**\n   * Fetch nodes from service.\n   */\n  fetchNodes() {\n    this.nemnis.fetchNodes((response) => {\n      if (response.data) {\n        this.dataSource.data = response.data;\n      }\n    });\n  }\n\n  /**\n   * Change to selected node.\n   * @param node NEM node\n   */\n  nodeClicked(node: Node): void {\n    this.nodeSelected = node;\n    const url = `${ node.endpoint.protocol }://${ node.endpoint.host }:${ node.endpoint.port}`;\n    this.nemnis.changeNode(url);\n    this.fetchNodes();\n  }\n}\n\n    \n\n    \n        Nodes\n\n\n  \n    \n    \n       Host \n       {{data.endpoint.host}}:{{data.endpoint.port}} \n    \n\n    \n       Name \n       {{data.identity.name}} \n    \n\n    \n       Version \n       {{data.metaData.version}} \n    \n\n\n    \n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./nodes.component.css\n                \n                h3 {\n  text-align: center\n}\ntable {\n    width: 100%;\n}\n.mat-cell {\n  padding: 8px 8px 8px 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nodes                 Host        {{data.endpoint.host}}:{{data.endpoint.port}}                Name        {{data.identity.name}}                Version        {{data.metaData.version}}                   '\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NodesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NodesModule.html":{"url":"modules/NodesModule.html","title":"module - NodesModule","body":"\n                   \n\n\n\n\n    Modules\n    NodesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NodesModule\n\n\n\ncluster_NodesModule_declarations\n\n\n\ncluster_NodesModule_imports\n\n\n\n\nNodesComponent\n\nNodesComponent\n\n\n\nNodesModule\n\nNodesModule\n\nNodesModule -->\n\nNodesComponent->NodesModule\n\n\n\n\n\nNodesRoutingModule\n\nNodesRoutingModule\n\nNodesModule -->\n\nNodesRoutingModule->NodesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/nodes/nodes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NodesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NodesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatDialogModule, MatPaginatorModule } from '@angular/material';\n\nimport { NodesRoutingModule } from './nodes-routing.module';\nimport { NodesComponent } from './nodes.component';\n\n@NgModule({\n  declarations: [NodesComponent],\n  imports: [\n    CommonModule,\n    NodesRoutingModule,\n    MatTableModule,\n    MatDialogModule,\n    MatPaginatorModule\n  ]\n})\nexport class NodesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NodesRoutingModule.html":{"url":"modules/NodesRoutingModule.html","title":"module - NodesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NodesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/nodes/nodes-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NodesComponent } from './nodes.component';\n\nconst routes: Routes = [\n  { path: 'nodes', component: NodesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NodesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound/notfound.component.ts\n\n\n    \n        Description\n    \n    \n        Displayed if page not found.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n            \n                styleUrls\n                ./notfound.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/notfound/notfound.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notfound/notfound.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Displayed if page not found.\n */\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Page not found.\n\n\n    \n\n    \n                \n                    ./notfound.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page not found.'\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transaction.html":{"url":"interfaces/Transaction.html","title":"interface - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Transaction.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        amount\n                                \n                                \n                                        deadline\n                                \n                                \n                                        fee\n                                \n                                \n                                        message\n                                \n                                \n                                        mode\n                                \n                                \n                                        recipient\n                                \n                                \n                                        remoteAccount\n                                \n                                \n                                        signature\n                                \n                                \n                                        signer\n                                \n                                \n                                        timeStamp\n                                \n                                \n                                        type\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadline\n                                    \n                                \n                                \n                                    \n                                        deadline:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient\n                                    \n                                \n                                \n                                    \n                                        recipient:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteAccount\n                                    \n                                \n                                \n                                    \n                                        remoteAccount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                    \n                                \n                                \n                                    \n                                        signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signer\n                                    \n                                \n                                \n                                    \n                                        signer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transaction {\n  deadline: number;\n  fee: number;\n  mode: number;\n  remoteAccount: string;\n  signature: string;\n  signer: string;\n  timeStamp: number;\n  type: number;\n  version: number;\n  amount: number;\n  message: Message;\n  recipient: string;\n}\n\nexport interface Message {\n  payload: string;\n  type: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TxesDetailsComponent.html":{"url":"components/TxesDetailsComponent.html","title":"component - TxesDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TxesDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/blocks/block-txes/txes-details/txes-details.component.ts\n\n\n    \n        Description\n    \n    \n        Display transaction details in dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-txes-details\n            \n\n            \n                styleUrls\n                ./txes-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./txes-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Transaction)\n                    \n                \n                        \n                            \n                                Defined in src/app/blocks/block-txes/txes-details/txes-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Transaction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NEM transaction\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/blocks/block-txes/txes-details/txes-details.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/blocks/block-txes/txes-details/txes-details.component.ts:18\n                            \n                        \n\n                \n                    \n                        NEM transaction\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { Transaction } from 'src/app/interfaces/Transaction';\n\n/**\n * Display transaction details in dialog.\n */\n@Component({\n  selector: 'app-txes-details',\n  templateUrl: './txes-details.component.html',\n  styleUrls: ['./txes-details.component.css']\n})\nexport class TxesDetailsComponent implements OnInit {\n\n  /**\n   * @param data NEM transaction\n   */\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Transaction) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  txes-details\n\n{{data.timeStamp | msNemesis | date:\"yyyy-MM-dd HH:mm:ss\"}}\n  \n    \n    \n      {{item.key}}: {{item.value | message}}\n    \n    \n    \n      {{item.key}}: {{item.value}}\n    \n\n\n    \n\n    \n                \n                    ./txes-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  txes-details{{data.timeStamp | msNemesis | date:\"yyyy-MM-dd HH:mm:ss\"}}                {{item.key}}: {{item.value | message}}                  {{item.key}}: {{item.value}}    '\n    var COMPONENTS = [{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlocksComponent', 'selector': 'app-blocks'},{'name': 'BlockTxesComponent', 'selector': 'app-block-txes'},{'name': 'NodesComponent', 'selector': 'app-nodes'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'TxesDetailsComponent', 'selector': 'app-txes-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TxesDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/accounts/accounts.component.ts\n            \n            component\n            AccountsComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/blocks/block-txes/block-txes.component.ts\n            \n            component\n            BlockTxesComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/blocks/block-txes/txes-details/txes-details.component.ts\n            \n            component\n            TxesDetailsComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/blocks/blocks.component.ts\n            \n            component\n            BlocksComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/interfaces/Account.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/Account.ts\n            \n            interface\n            AccountInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/Account.ts\n            \n            interface\n            AccountMetaData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/Block.ts\n            \n            interface\n            Block\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/Block.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/Chain.ts\n            \n            interface\n            Height\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/ExplorerBlockViewModel.ts\n            \n            interface\n            ExplorerBlockViewModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/ExplorerBlockViewModel.ts\n            \n            interface\n            ExplorerBlockViewModelData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/ExplorerTransferViewModel.ts\n            \n            interface\n            ExplorerTransferViewModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Node.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Node.ts\n            \n            interface\n            NodeCollection\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/Node.ts\n            \n            interface\n            NodeEndPoint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Node.ts\n            \n            interface\n            NodeIdentity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/Node.ts\n            \n            interface\n            NodeMetaData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/Transaction.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/Transaction.ts\n            \n            interface\n            Transaction\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/nem-nis.service.ts\n            \n            injectable\n            NemNisService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/nodes/nodes.component.ts\n            \n            component\n            NodesComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pipes/message.pipe.ts\n            \n            pipe\n            MessagePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/ms-nemesis.pipe.ts\n            \n            pipe\n            MsNemesisPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNemExplorer\nThis project was generated with Angular CLI version 7.3.5.\nNEM node\nYou can use node url from list: (https://nemnodes.org/nodes/)\nor locally:\nInstall NEM node as backend server (https://nem.io/downloads/)\n- download nis-standalone example 'nis-0.6.97.tgz'\n- unpack\n- cd package\n- runNis (windows)\nor\n- ./nix.runNis.sh (linux)\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlocksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlocksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NodesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NodesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_declarations\n\n\n\ncluster_AccountsModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BlocksModule\n\n\n\ncluster_BlocksModule_declarations\n\n\n\ncluster_BlocksModule_imports\n\n\n\ncluster_NodesModule\n\n\n\ncluster_NodesModule_declarations\n\n\n\ncluster_NodesModule_imports\n\n\n\n\nAccountsComponent\n\nAccountsComponent\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAccountsComponent->AccountsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAccountsRoutingModule\n\nAccountsRoutingModule\n\nAccountsModule -->\n\nAccountsRoutingModule->AccountsModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlocksModule\n\nBlocksModule\n\nAppModule -->\n\nBlocksModule->AppModule\n\n\n\n\n\nNodesModule\n\nNodesModule\n\nAppModule -->\n\nNodesModule->AppModule\n\n\n\n\n\nBlockTxesComponent\n\nBlockTxesComponent\n\nBlocksModule -->\n\nBlockTxesComponent->BlocksModule\n\n\n\n\n\nBlocksComponent\n\nBlocksComponent\n\nBlocksModule -->\n\nBlocksComponent->BlocksModule\n\n\n\n\n\nMessagePipe\n\nMessagePipe\n\nBlocksModule -->\n\nMessagePipe->BlocksModule\n\n\n\n\n\nMsNemesisPipe\n\nMsNemesisPipe\n\nBlocksModule -->\n\nMsNemesisPipe->BlocksModule\n\n\n\n\n\nTxesDetailsComponent\n\nTxesDetailsComponent\n\nBlocksModule -->\n\nTxesDetailsComponent->BlocksModule\n\n\n\n\n\nBlocksRoutingModule\n\nBlocksRoutingModule\n\nBlocksModule -->\n\nBlocksRoutingModule->BlocksModule\n\n\n\n\n\nNodesComponent\n\nNodesComponent\n\nNodesModule -->\n\nNodesComponent->NodesModule\n\n\n\n\n\nNodesRoutingModule\n\nNodesRoutingModule\n\nNodesModule -->\n\nNodesRoutingModule->NodesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
